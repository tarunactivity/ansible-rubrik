# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class PrincipalSummary(Model):
    """PrincipalSummary.

    :param id: ID of user or group
    :type id: str
    :param principal_type: Type of principal: (user|group)
    :type principal_type: str
    :param managed_id: Managed ID of principal
    :type managed_id: str
    :param is_deleted: Whether the principal is deleted
    :type is_deleted: bool
    :param auth_domain_id: ID of the auth domain to which the principal
     belongs
    :type auth_domain_id: str
    :param name: User or group name
    :type name: str
    :param first_name: First name (users only)
    :type first_name: str
    :param last_name: Last name (users only)
    :type last_name: str
    :param email_address: E-mail address
    :type email_address: str
    :param description: Description (groups only)
    :type description: str
    :param authorizations: Explicit authorizations for this principal
    :type authorizations: :class:`AuthorizationSummary
     <rubriklib_int.models.AuthorizationSummary>`
    """

    _validation = {
        'id': {'required': True},
        'principal_type': {'required': True},
        'managed_id': {'required': True},
        'is_deleted': {'required': True},
        'auth_domain_id': {'required': True},
        'name': {'required': True},
        'authorizations': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'principal_type': {'key': 'principalType', 'type': 'str'},
        'managed_id': {'key': 'managedId', 'type': 'str'},
        'is_deleted': {'key': 'isDeleted', 'type': 'bool'},
        'auth_domain_id': {'key': 'authDomainId', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'first_name': {'key': 'firstName', 'type': 'str'},
        'last_name': {'key': 'lastName', 'type': 'str'},
        'email_address': {'key': 'emailAddress', 'type': 'str'},
        'description': {'key': 'description', 'type': 'str'},
        'authorizations': {'key': 'authorizations', 'type': 'AuthorizationSummary'},
    }

    def __init__(self, id, principal_type, managed_id, is_deleted, auth_domain_id, name, authorizations, first_name=None, last_name=None, email_address=None, description=None):
        self.id = id
        self.principal_type = principal_type
        self.managed_id = managed_id
        self.is_deleted = is_deleted
        self.auth_domain_id = auth_domain_id
        self.name = name
        self.first_name = first_name
        self.last_name = last_name
        self.email_address = email_address
        self.description = description
        self.authorizations = authorizations
