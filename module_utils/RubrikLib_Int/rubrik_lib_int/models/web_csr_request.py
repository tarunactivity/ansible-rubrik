# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class WebCsrRequest(Model):
    """WebCsrRequest.

    :param hostnames: Host names associated with the certificate. It can be
     one or more host names (separated by commas), or it can be a wildcard host
     name (e.g., *.rubrik.example.com)
    :type hostnames: list of str
    :param organization: Name of organization associated with the certificate
     (e.g., Rubrik, Inc.)
    :type organization: str
    :param organization_unit: Name of the organization unit associated with
     the certificate (e.g., Engineering)
    :type organization_unit: str
    :param country: Two-letter ISO code for the country where the provided
     organization is located (e.g., US, GB, or FR)
    :type country: str
    :param state: State (if applicable) where the provided organization is
     located (e.g., California)
    :type state: str
    :param city: City where the provided organization is located (e.g., New
     York or London)
    :type city: str
    """

    _validation = {
        'hostnames': {'required': True},
    }

    _attribute_map = {
        'hostnames': {'key': 'hostnames', 'type': '[str]'},
        'organization': {'key': 'organization', 'type': 'str'},
        'organization_unit': {'key': 'organizationUnit', 'type': 'str'},
        'country': {'key': 'country', 'type': 'str'},
        'state': {'key': 'state', 'type': 'str'},
        'city': {'key': 'city', 'type': 'str'},
    }

    def __init__(self, hostnames, organization=None, organization_unit=None, country=None, state=None, city=None):
        self.hostnames = hostnames
        self.organization = organization
        self.organization_unit = organization_unit
        self.country = country
        self.state = state
        self.city = city
