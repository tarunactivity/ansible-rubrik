# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class ManagedObjectSummary(Model):
    """ManagedObjectSummary.

    :param managed_id:
    :type managed_id: str
    :param object_type: Type of the object (e.g., VirtualMachine)
    :type object_type: str
    :param name: Name of the object (e.g., VM name or physical host hostname
    :type name: str
    :param primary_cluster_id: ID of the primary cluster
    :type primary_cluster_id: str
    :param is_archived: Whether or not this managed object is archived
    :type is_archived: bool
    :param descendant_counts: Count of all the descendants of each type
     (recursively)
    :type descendant_counts: :class:`ManagedObjectDescendantCounts
     <rubriklib_int.models.ManagedObjectDescendantCounts>`
    :param locations: Paths from the hierarchy root to the object (multiple
     may exist), expressed as arrays of managed IDs
    :type locations: :class:`ManagedObjectLocations
     <rubriklib_int.models.ManagedObjectLocations>`
    :param properties: Properties of the object
    :type properties: :class:`ManagedObjectProperties
     <rubriklib_int.models.ManagedObjectProperties>`
    """

    _validation = {
        'managed_id': {'required': True},
        'object_type': {'required': True},
        'name': {'required': True},
        'primary_cluster_id': {'required': True},
        'is_archived': {'required': True},
        'descendant_counts': {'required': True},
        'locations': {'required': True},
        'properties': {'required': True},
    }

    _attribute_map = {
        'managed_id': {'key': 'managedId', 'type': 'str'},
        'object_type': {'key': 'objectType', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'primary_cluster_id': {'key': 'primaryClusterId', 'type': 'str'},
        'is_archived': {'key': 'isArchived', 'type': 'bool'},
        'descendant_counts': {'key': 'descendantCounts', 'type': 'ManagedObjectDescendantCounts'},
        'locations': {'key': 'locations', 'type': 'ManagedObjectLocations'},
        'properties': {'key': 'properties', 'type': 'ManagedObjectProperties'},
    }

    def __init__(self, managed_id, object_type, name, primary_cluster_id, is_archived, descendant_counts, locations, properties):
        self.managed_id = managed_id
        self.object_type = object_type
        self.name = name
        self.primary_cluster_id = primary_cluster_id
        self.is_archived = is_archived
        self.descendant_counts = descendant_counts
        self.locations = locations
        self.properties = properties
