# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class GlobalCerebroConfig(Model):
    """GlobalCerebroConfig.

    :param agent_server_port: Agent server port
    :type agent_server_port: int
    :param agent_server_secure_port: Agent server secure port
    :type agent_server_secure_port: int
    :param agent_server_ip: Agent server ip
    :type agent_server_ip: str
    :param cluster_private_key: The cluster's private key
    :type cluster_private_key: str
    :param cluster_public_certificate: The cluster's public certificate,
     anyone having this can communicate with the current cluster
    :type cluster_public_certificate: str
    :param archival_location_reconnect_job_in_memory_sem_shares: Maximum
     number of concurrent archival location reconnect jobs per node
    :type archival_location_reconnect_job_in_memory_sem_shares: int
    :param audit_job_in_memory_sem_shares: Maximum number of concurrent audit
     jobs per node
    :type audit_job_in_memory_sem_shares: int
    :param calculate_effective_sla_job_in_memory_sem_shares: Maximum number of
     concurrent calculate effective SLA jobs per node
    :type calculate_effective_sla_job_in_memory_sem_shares: int
    :param cleanup_database_backup_job_in_memory_sem_shares: Maximum number of
     concurrent cleanup database backup jobs per node
    :type cleanup_database_backup_job_in_memory_sem_shares: int
    :param clean_up_references_job_in_memory_shares: Maximum number of
     concurrent jobs per node to clean references
    :type clean_up_references_job_in_memory_shares: int
    :param clean_up_references_frequency_in_minutes: Interval for cleaning up
     references
    :type clean_up_references_frequency_in_minutes: int
    :param consolidate_on_cloud_job_frequency_in_minutes: Interval for
     consolidade on cloud jobs in minutes
    :type consolidate_on_cloud_job_frequency_in_minutes: int
    :param create_cloud_image_job_frequency_in_mins: Interval for
     CreateCloudImage jobs in minutes
    :type create_cloud_image_job_frequency_in_mins: int
    :param create_cloud_image_job_in_memory_sem_shares: Maximum number of
     concurrent CreateCloudImage jobs per node
    :type create_cloud_image_job_in_memory_sem_shares: int
    :param throttle_max_ref_count: Maximum number of concurrent snapshots per
     ESXi host
    :type throttle_max_ref_count: int
    :param throttle_physical_host_max_ref_count: Maximum number of concurrent
     snapshots per physical host
    :type throttle_physical_host_max_ref_count: int
    :param default_page_size: Default size for pagination in cassandra, a
     smaller value should be used for tables with large rows
    :type default_page_size: int
    :param default_sleep_for_semaphore_in_seconds: The default amount of time
     to sleep when the semaphore cannot be acquired
    :type default_sleep_for_semaphore_in_seconds: int
    :param delete_corrupt_snapshots_job_in_memory_sem_shares: Maximum number
     of concurrent delete corrupt snapshots jobs per node
    :type delete_corrupt_snapshots_job_in_memory_sem_shares: int
    :param delete_replication_source_job_in_memory_sem_shares: Maximum number
     of concurrent delete replication source jobs per node
    :type delete_replication_source_job_in_memory_sem_shares: int
    :param delete_vcenter_job_in_memory_sem_shares: Maximum number of
     concurrent delete vcenter jobs per node
    :type delete_vcenter_job_in_memory_sem_shares: int
    :param download_job_in_memory_sem_shares: Maximum number of concurrent
     download jobs per node
    :type download_job_in_memory_sem_shares: int
    :param restore_file_job_in_memory_sem_shares: Maximum number of concurrent
     restore file jobs per node
    :type restore_file_job_in_memory_sem_shares: int
    :param fileset_restore_file_job_in_memory_sem_shares: Maximum number of
     concurrent jobs to restore files to hosts per node
    :type fileset_restore_file_job_in_memory_sem_shares: int
    :param email_reports_job_in_memory_sem_shares: Maximum number of
     concurrent email reports jobs per node
    :type email_reports_job_in_memory_sem_shares: int
    :param enable_blackout_window: Whether to check blackout window for
     scheduling jobs
    :type enable_blackout_window: bool
    :param enable_disk_space_semaphore: Whether to use the disk space
     semaphore before creating a snapshot
    :type enable_disk_space_semaphore: bool
    :param enable_snapshot_integrity: Whether to periodically run snapshot
     integrity on every snapshot to detect corruptions (VERY EXPENSIVE)
    :type enable_snapshot_integrity: bool
    :param snapshot_integrity_sampling_ratio: Sample size used for computing
     hash of a snapshot
    :type snapshot_integrity_sampling_ratio: float
    :param expire_job_frequency_in_minutes: Expire snapshot jobs interval in
     minutes
    :type expire_job_frequency_in_minutes: int
    :param export_job_in_memory_sem_shares: Maximum number of concurrent
     export jobs per node
    :type export_job_in_memory_sem_shares: int
    :param fileset_by_host_initial_range_for_back_off_in_ms: Initial range for
     exponential backoff for FilesetByHostId insertion
    :type fileset_by_host_initial_range_for_back_off_in_ms: int
    :param fileset_by_host_max_retry_attempts: Number of retries to add an
     entry into FilesetByHostId table
    :type fileset_by_host_max_retry_attempts: int
    :param fileset_backup_script_timeout_sec: Number of seconds after which
     the pre-backup or post-backup scripts are killed if they have not
     completed execution
    :type fileset_backup_script_timeout_sec: int
    :param fileset_backup_script_error_handling: Default action if pre-backup
     or post-backup scripts fail
    :type fileset_backup_script_error_handling: str
    :param reference_op_max_attempts: Number of retries to add/remove a
     reference
    :type reference_op_max_attempts: int
    :param reference_op_back_off_in_ms: Initital backoff duration to
     add/remove a reference
    :type reference_op_back_off_in_ms: int
    :param archival_connect_job_update_retries: Number of retries for updating
     elements in the jobId list
    :type archival_connect_job_update_retries: int
    :param archival_disconnect_job_update_retries: Number of retries for
     disconnect archival location jobs
    :type archival_disconnect_job_update_retries: int
    :param archival_delete_job_update_retries: Number of retries for delete
     archival location jobs
    :type archival_delete_job_update_retries: int
    :param recover_archived_metadata_job_retries: Number of retries for
     recovering metadata from archive
    :type recover_archived_metadata_job_retries: int
    :param fingerprint_frequency_in_minutes: Interval for fingerprint backfill
     jobs in minutes
    :type fingerprint_frequency_in_minutes: int
    :param frequent_stats_updater_frequency_in_minutes: Interval for stats
     updater jobs in minutes
    :type frequent_stats_updater_frequency_in_minutes: int
    :param frequent_stats_updater_job_in_memory_sem_shares: Maximum number of
     concurrent frequent stats updater jobs per node
    :type frequent_stats_updater_job_in_memory_sem_shares: int
    :param gc_job_frequency_in_minutes: Interval for GC jobs in minutes
    :type gc_job_frequency_in_minutes: int
    :param gc_job_in_memory_sem_shares: Maximum number of concurrent GC jobs
     per node
    :type gc_job_in_memory_sem_shares: int
    :param should_throttle_backup_jobs: Whether or not to throttle backup jobs
     based on source load
    :type should_throttle_backup_jobs: bool
    :param backup_throttling_delay_in_minutes: Number of minutes to delay a
     backup job if we decide to throttle it
    :type backup_throttling_delay_in_minutes: int
    :param prune_job_in_memory_sem_shares: Maximum number of concurrent jobs
     per node to prune job instance table
    :type prune_job_in_memory_sem_shares: int
    :param prune_job_frequency_in_minutes: Interval to Prune jobs in minutes
    :type prune_job_frequency_in_minutes: int
    :param prune_job_pruning_age_in_days: Max number of days to keep a job
     instance around. It gets deleted after that many days
    :type prune_job_pruning_age_in_days: int
    :param prune_job_pruning_count: The value for the prunning count was
     chosen considering job instances are archived.
    :type prune_job_pruning_count: int
    :param audit_job_frequency_in_minutes: Interval to Audit jobs in minutes
    :type audit_job_frequency_in_minutes: int
    :param generate_report_templates_job_frequency_in_minutes: Interval to run
     the generate report template jobs in minutes
    :type generate_report_templates_job_frequency_in_minutes: int
    :param generate_custom_reports_job_frequency_in_minutes: Interval to run
     the generate custom report jobs in minutes
    :type generate_custom_reports_job_frequency_in_minutes: int
    :param generate_report_templates_job_in_memory_sem_shares: Maximum number
     of concurrent generate report template jobs per node
    :type generate_report_templates_job_in_memory_sem_shares: int
    :param generate_custom_reports_job_in_memory_sem_shares: Maximum number of
     concurrent generate custom reports jobs per node
    :type generate_custom_reports_job_in_memory_sem_shares: int
    :param generate_report_templates_job_staggering_offset_in_minutes:
     Staggering offset to schedule the job in minutes.
    :type generate_report_templates_job_staggering_offset_in_minutes: int
    :param generate_custom_reports_job_staggering_offset_in_minutes:
     Staggering offset to schedule the job in minutes.
    :type generate_custom_reports_job_staggering_offset_in_minutes: int
    :param handle_corrupt_snapshots_job_in_memory_sem_shares: Maximum number
     of concurrent handle corrupt snapshots jobs per node
    :type handle_corrupt_snapshots_job_in_memory_sem_shares: int
    :param index_max_directories_to_delete: Maximum number of index
     directories to delete stored in snappable.
    :type index_max_directories_to_delete: int
    :param index_snappable_job_max_snapshots_per_run: Maximum number of
     snapshots without index processed per index run
    :type index_snappable_job_max_snapshots_per_run: int
    :param index_snappable_job_max_snapshots_with_index_per_run: Maximum
     number of snapshots with index processed per index run
    :type index_snappable_job_max_snapshots_with_index_per_run: int
    :param index_snappable_job_max_attempts_per_snapshot: Maximum number of
     attempts to index a snapshot before we quit
    :type index_snappable_job_max_attempts_per_snapshot: int
    :param index_snappable_job_use_uml_for_indexing: Whether to use UML for
     Indexing
    :type index_snappable_job_use_uml_for_indexing: bool
    :param index_snappable_throttle_delay_in_ms: Delay in microseconds for a
     job to wait in queue in case there are more than one job running for a
     given snappable
    :type index_snappable_throttle_delay_in_ms: int
    :param index_snappable_enable_patch_cache: Whether PatchCache should be
     enabled for Indexing
    :type index_snappable_enable_patch_cache: bool
    :param infrequent_stats_updater_frequency_in_minutes: Interval for
     infrequent stats jobs in minutes
    :type infrequent_stats_updater_frequency_in_minutes: int
    :param infrequent_stats_update_timeout_in_mins: Timeout while waiting for
     the infrequent stats to complete
    :type infrequent_stats_update_timeout_in_mins: int
    :param infrequent_stats_updater_job_in_memory_sem_shares: Maximum number
     of concurrent infrequent stats updater jobs per node
    :type infrequent_stats_updater_job_in_memory_sem_shares: int
    :param job_maintainer_frequency_in_minutes: Job maintainer interval in
     minutes
    :type job_maintainer_frequency_in_minutes: int
    :param job_maintainer_job_in_memory_sem_shares: Maximum number of
     concurrent job maintainer jobs per node
    :type job_maintainer_job_in_memory_sem_shares: int
    :param job_staggering_range_in_minutes: The time range inside which we
     will stagger jobs. This is used to stagger some of the data management
     jobs in a week time frame. This will be done for reverse increment, cross
     increment, expire, GC, indexing, upload to / download from cloud,
     consolidate jobs.
    :type job_staggering_range_in_minutes: int
    :param lite_refresh_job_in_memory_sem_shares: Maximum number of concurrent
     lite refresh jobs per node
    :type lite_refresh_job_in_memory_sem_shares: int
    :param lite_refresh_job_interval_in_minutes: Interval between lite refresh
     jobs in minutes
    :type lite_refresh_job_interval_in_minutes: int
    :param log_upload_enabled: True if log upload is enabled
    :type log_upload_enabled: bool
    :param log_uploader_frequency_in_minutes: Interval for stats collecting
     jobs in minutes
    :type log_uploader_frequency_in_minutes: int
    :param log_uploader_job_in_memory_sem_shares: Maximum number of concurrent
     log uploader jobs per node
    :type log_uploader_job_in_memory_sem_shares: int
    :param metadata_maintenance_job_frequency: Interval for metadata
     maintenance jobs in minutes
    :type metadata_maintenance_job_frequency: int
    :param metadata_maintenance_job_in_memory_sem_shares: Maximum number of
     concurrent metadata maintenance jobs per node
    :type metadata_maintenance_job_in_memory_sem_shares: int
    :param mssql_log_download_max_attempts: Max number of times to attempt to
     download a mssql log before giving up and failing the job
    :type mssql_log_download_max_attempts: int
    :param mssql_take_snapshot_size_estimation_buffer: Buffer as a fraction of
     size for size estimation when taking a mssql snapshot
    :type mssql_take_snapshot_size_estimation_buffer: float
    :param refresh_mount_shares_job_frequency_in_minutes: Interval (in
     minutes) for the job to refresh mount shares
    :type refresh_mount_shares_job_frequency_in_minutes: int
    :param refresh_mount_shares_job_in_memory_sem_shares: Maximum number of
     concurrent jobs to refresh mount shares per node
    :type refresh_mount_shares_job_in_memory_sem_shares: int
    :param esx_addr_resolv_job_frequency_in_minutes: Interval for nfs share
     jobs in minutes
    :type esx_addr_resolv_job_frequency_in_minutes: int
    :param oracle_backup_query_frequency_in_minutes: Interval between Oracle
     database backup queries in minutes
    :type oracle_backup_query_frequency_in_minutes: int
    :param oracle_backup_cleanup_frequency_in_minutes: Interval to check
     deleted Oracle databases in minutes
    :type oracle_backup_cleanup_frequency_in_minutes: int
    :param periodic_update_default_timeout_in_mins: Default time out while
     waiting for any periodic update to run
    :type periodic_update_default_timeout_in_mins: int
    :param periodic_update_abort_timeout_in_mins: Time out after issuing the
     abort to each update
    :type periodic_update_abort_timeout_in_mins: int
    :param per_node_job_maintainer_frequency_in_minutes: Interval beween job
     maintainer jobs in minutes
    :type per_node_job_maintainer_frequency_in_minutes: int
    :param pull_replicate_integrity_probability: Probability that we will
     decide to run snapshot integrity for a replicated snapshot
    :type pull_replicate_integrity_probability: int
    :param pull_mssql_log_replicate_job_interval_in_minutes: Interval of mssql
     log replication jobs in minutes
    :type pull_mssql_log_replicate_job_interval_in_minutes: int
    :param pull_replicate_close_snappable_num_retries: Number of retries to
     close snappable before raising alert
    :type pull_replicate_close_snappable_num_retries: int
    :param maximum_replication_catchup_bound_in_days: Maximum time in days
     within which replication jobs try to select the next snapshot to replicate
    :type maximum_replication_catchup_bound_in_days: int
    :param minimum_replication_lag_allowed_in_days: Minimum lag time in days a
     replication job waits before starts to skip snapshots
    :type minimum_replication_lag_allowed_in_days: int
    :param lagged_time_to_skip_fraction: Fraction of the lagged time we skip
     for the next snapshot to replicate. With the default of 0.5, we skip all
     snapshots within the first half of the lagged time and start picking next
     snapshot from the second half
    :type lagged_time_to_skip_fraction: float
    :param mssql_log_upload_job_interval_in_minutes: Interval of mssql log
     upload jobs in minutes
    :type mssql_log_upload_job_interval_in_minutes: int
    :param mssql_log_upload_job_max_logs_to_upload: Max number of logs to
     upload in a single mssql log upload job
    :type mssql_log_upload_job_max_logs_to_upload: int
    :param pull_replicate_poll_period_minutes: Interval between pull replicate
     jobs in minutes
    :type pull_replicate_poll_period_minutes: int
    :param pull_replicate_job_delay_range_seconds: Time by which the pull
     replicate job should be delayed if it can't aquire resources
    :type pull_replicate_job_delay_range_seconds: int
    :param query_database_backup_job_in_memory_sem_shares: Maximum number of
     concurrent query database backup jobs per node
    :type query_database_backup_job_in_memory_sem_shares: int
    :param recover_archived_metadata_job_in_memory_sem_shares: Maximum number
     of concurrent recover archived metadata jobs per node
    :type recover_archived_metadata_job_in_memory_sem_shares: int
    :param refresh_auth_domain_job_in_memory_sem_shares: Maximum number of
     concurrent refresh auth domain jobs per node
    :type refresh_auth_domain_job_in_memory_sem_shares: int
    :param refresh_auth_domain_job_interval_in_minutes: Interval for
     refreshing auth domain jobs in minutes
    :type refresh_auth_domain_job_interval_in_minutes: int
    :param refresh_auth_domain_job_retries: Number of retries for auth domain
     jobs
    :type refresh_auth_domain_job_retries: int
    :param refresh_host_num_retries: Number of retries for host refresh jobs
    :type refresh_host_num_retries: int
    :param refresh_num_retries: Delay the lite refresh by the specified time
     if the refresh throttle is not available. The unit is seconds.
    :type refresh_num_retries: int
    :param refresh_host_job_in_memory_sem_shares: Maximum number of concurrent
     host refresh jobs per node
    :type refresh_host_job_in_memory_sem_shares: int
    :param refresh_job_in_memory_sem_shares: Maximum number of concurrent
     refresh jobs per node
    :type refresh_job_in_memory_sem_shares: int
    :param refresh_cached_objects_frequency_in_minutes: Interval for
     refreshing cached objects table in minutes. We cache small tables inside
     cached_value table in order to optimize full-table scans. Those caches
     might sometime go out of sync (for example, if update to original table
     succeeded, but update to cache failed). This value denotes how frequently
     the job to sync the cache with original table should run.
    :type refresh_cached_objects_frequency_in_minutes: int
    :param refresh_host_job_interval_in_minutes: Interval of refresh host jobs
     in minutes
    :type refresh_host_job_interval_in_minutes: int
    :param refresh_job_interval_in_minutes: Interval of refresh jobs in
     minutes
    :type refresh_job_interval_in_minutes: int
    :param esx_cbt_blacklist_alert_interval_in_ms: Interval of the alert check
     for ESX with CBT blacklisted builds.  Regardless of the value here this
     check will not run more frequently than the full refresh, i.e. the
     effective period will not be shorter than the interval specified by
     refreshJobIntervalInMinutes.
    :type esx_cbt_blacklist_alert_interval_in_ms: int
    :param remote_snapshot_refresh_period_minutes: Interval between remote
     snapshot refresh jobs in minutes
    :type remote_snapshot_refresh_period_minutes: int
    :param remote_snapshot_refresh_retry_attempts: Maximum number of times to
     retry a remote snapshot refresh job
    :type remote_snapshot_refresh_retry_attempts: int
    :param remove_vmware_snapshot_issues_job_in_memory_sem_shares: Maximum
     number of concurrent remove vmware snapshot issues jobs per node
    :type remove_vmware_snapshot_issues_job_in_memory_sem_shares: int
    :param snapshot_integrity_job_frequency_in_minutes: How frequently to run
     snapshot integrity (if enabled)
    :type snapshot_integrity_job_frequency_in_minutes: int
    :param snapshot_integrity_job_in_memory_sem_shares: Maximum number of
     concurrent snapshot integrity jobs per node
    :type snapshot_integrity_job_in_memory_sem_shares: int
    :param snapshot_integrity_min_snapshot_period_in_minutes: Maximum
     frequency (minimum period) for verifying a snapshot's integrity
    :type snapshot_integrity_min_snapshot_period_in_minutes: int
    :param snapshot_initial_range_for_back_off_in_ms: Initial range for
     exponential backoff for Snapshot insertion
    :type snapshot_initial_range_for_back_off_in_ms: int
    :param snapshot_max_retry_attempts: Number of retries to add an entry into
     Snapshot table
    :type snapshot_max_retry_attempts: int
    :param snapshot_early_allowance_in_minutes: Number of minutes early we
     will allow a snapshot to run if it was scheduled but doesn't need to run
     to meet SLA
    :type snapshot_early_allowance_in_minutes: int
    :param snappable_group_initial_range_for_back_off_in_ms: Initial range for
     exponential backoff for Snappable Group update
    :type snappable_group_initial_range_for_back_off_in_ms: int
    :param snappable_group_max_retry_attempts: Number of retries to update an
     entry into Snappable Group table
    :type snappable_group_max_retry_attempts: int
    :param source_cluster_refresh_job_frequency_in_minutes: Interval between
     source cluster refresh jobs in minutes
    :type source_cluster_refresh_job_frequency_in_minutes: int
    :param source_cluster_refresh_job_in_memory_sem_shares: Maximum number of
     concurrent source cluster refresh jobs per node
    :type source_cluster_refresh_job_in_memory_sem_shares: int
    :param source_cluster_refresh_snappable_batch_size: Number of snappables
     whose configs should be updated together
    :type source_cluster_refresh_snappable_batch_size: int
    :param stat_collector_job_in_memory_sem_shares: Maximum number of
     concurrent stat collector jobs per node
    :type stat_collector_job_in_memory_sem_shares: int
    :param fail_on_mount_bootup_failure: Fail mount job if mount fails to boot
     up
    :type fail_on_mount_bootup_failure: bool
    :param fail_on_export_bootup_failure: Fail mount job if export VM fails to
     boot up
    :type fail_on_export_bootup_failure: bool
    :param upload_job_frequency_in_minutes: Upload job interval in minutes
    :type upload_job_frequency_in_minutes: int
    :param upload_index_job_frequency_in_minutes: Upload job interval in
     minutes
    :type upload_index_job_frequency_in_minutes: int
    :param archived_indexable_snapshot_expiry_threshold_in_mins: If a snapshot
     is uploaded and is going to expire but hasn't been indexed yet, then we
     don't expire it immediately and wait for certail threshold to reach before
     expiring it
    :type archived_indexable_snapshot_expiry_threshold_in_mins: int
    :param verify_sla_job_in_memory_sem_shares: Maximum number of concurrent
     verify sla jobs per node
    :type verify_sla_job_in_memory_sem_shares: int
    :param verify_sla_job_frequency_in_minutes: Frequency in minutes for
     verify sla jobs
    :type verify_sla_job_frequency_in_minutes: int
    :param acceptable_threshold_violation: Factor by which unexpired snapshots
     can violate SLA Bucket
    :type acceptable_threshold_violation: float
    :param first_snapshot_violation_threshold_in_hours: Amount of time it is
     OK to miss the first snapshot by
    :type first_snapshot_violation_threshold_in_hours: int
    :param minimum_acceptable_sla_threshold_in_minutes: Minimum threshold to
     flag a snapshot as missed, in minutes
    :type minimum_acceptable_sla_threshold_in_minutes: int
    :param maximum_acceptable_sla_threshold_in_days: Maximum threshold
     allowance before flagging missed snapshot, in days
    :type maximum_acceptable_sla_threshold_in_days: int
    :param disk_space_semaphore_min_size_in_gb: Min size guarded by a single
     disk space semaphore, in GiB
    :type disk_space_semaphore_min_size_in_gb: float
    :param disk_space_semaphore_chunk_size_in_gb: Chunk size used for
     distributed disk space allocation, in GiB
    :type disk_space_semaphore_chunk_size_in_gb: float
    :param distributed_semaphore_max_retry_attempts: Number of retries to
     allocate on a single semaphore
    :type distributed_semaphore_max_retry_attempts: int
    :param distributed_semaphore_initial_range_for_back_off_in_ms: Initial
     range for exponential backoff
    :type distributed_semaphore_initial_range_for_back_off_in_ms: int
    :param distributed_semaphore_max_sleep_for_retry_in_ms: Max range for
     exponential backoff
    :type distributed_semaphore_max_sleep_for_retry_in_ms: int
    :param email_reports_job_frequency_in_minutes: Interval for email reports
     jobs in minutes
    :type email_reports_job_frequency_in_minutes: int
    :param email_reports_job_staggering_offset_in_minutes: Staggering offset
     for scheduling email report jobs
    :type email_reports_job_staggering_offset_in_minutes: int
    :param events_ttl_in_days: Number of days events are kept. This is
     required to determine the point till which we need to query. This should
     match TTL of the table
    :type events_ttl_in_days: int
    :param notifications_ttl_in_days: Number of days notifications are kept.
     This is required to determine the point till which we need to query. This
     should match TTL of the table
    :type notifications_ttl_in_days: int
    :param per_node_job_maintainer_job_in_memory_sem_shares: Number of
     perNodeJob maintainer jobs that can run concurrently on a given node.
    :type per_node_job_maintainer_job_in_memory_sem_shares: int
    :param enable_disk_stream_semaphore: Whether to use the disk stream
     semaphore
    :type enable_disk_stream_semaphore: bool
    :param archival_connecting_jobs_serialized_list: Serialized list of
     archival location connecting jobs which are still running
    :type archival_connecting_jobs_serialized_list: str
    :param disk_stream_semaphore_min_size: Min num streams guarded by a single
     disk stream semaphore
    :type disk_stream_semaphore_min_size: int
    :param disk_stream_semaphore_chunk_size: Chunk size used for disk stream
     semaphore allocation
    :type disk_stream_semaphore_chunk_size: int
    :param disk_stream_semaphore_streams_per_disk: Number of streams per disk
     for optimal throughput
    :type disk_stream_semaphore_streams_per_disk: float
    :param disk_stream_semaphore_scale_factor: Factor by which to multiply to
     get the internal equivalent of a single disk stream (here, 1 disk stream =
     100 semaphore units)
    :type disk_stream_semaphore_scale_factor: int
    :param job_fetcher_sleep_time_seconds: Sleep time between each iteration
     of JFL
    :type job_fetcher_sleep_time_seconds: int
    :param max_random_sleep_between_point_queries_ms: Maximum sleep time used
     for picking the random duration when pacing point queries.
    :type max_random_sleep_between_point_queries_ms: int
    :param always_force_full_snapshot: Whether or not to always force a full
     snapshot, even when an incremental would normally be taken
    :type always_force_full_snapshot: bool
    :param ingest_vm_to_disk_threshold_in_gb: Size of full disks for a VM past
     which to ingest direct to disk (/sd/snapshot) and not copy
    :type ingest_vm_to_disk_threshold_in_gb: int
    :param snapshot_atomic_op_max_attempts: Max attempts to add/delete a
     snapshot to/from virtual machine snapshot index.
    :type snapshot_atomic_op_max_attempts: int
    :param snapshot_atomic_op_initial_sleep_in_ms: Milliseconds to sleep
     between attempts to add/delete a snapshot to/from virtual machine snapshot
     index.
    :type snapshot_atomic_op_initial_sleep_in_ms: int
    :param max_random_sleep_between_virtual_machine_point_queries_ms: Maximum
     sleep time used for picking the random duration when pacing point queries
     on the virtual machine table.
    :type max_random_sleep_between_virtual_machine_point_queries_ms: int
    :param max_random_sleep_between_pages_in_ms: Maximum sleep time used for
     picking the random duration when pacing paginated iterate queries.
    :type max_random_sleep_between_pages_in_ms: int
    :param blob_store_prefix_path_in_sd_snapshot: Blobstore root working
     directory
    :type blob_store_prefix_path_in_sd_snapshot: str
    :param blob_store_prefix_path_in_sd_scratch: Blobstore root scratch
     directory
    :type blob_store_prefix_path_in_sd_scratch: str
    :param snappable_prefix_path_in_sd_snapshot: Snappables root working
     directory
    :type snappable_prefix_path_in_sd_snapshot: str
    :param snappable_prefix_path_in_sd_scratch: Snappables root scratch
     directory
    :type snappable_prefix_path_in_sd_scratch: str
    :param reports_prefix_path_in_sd_snapshot: Reports root working directory
    :type reports_prefix_path_in_sd_snapshot: str
    :param reports_prefix_path_in_sd_scratch: Reports root scratch directory
    :type reports_prefix_path_in_sd_scratch: str
    :param bolt_prefix_path_in_sd_scratch: Bolts root scratch directory
    :type bolt_prefix_path_in_sd_scratch: str
    :param reports_dir_ttl_in_seconds: Time to live of files in reports
     working directory
    :type reports_dir_ttl_in_seconds: int
    :param reports_csv_dir_ttl_in_seconds: Time to live of files in reports
     working directory
    :type reports_csv_dir_ttl_in_seconds: int
    :param merged_spec_prefix_strip: Prefix to strip from MergedSpec
    :type merged_spec_prefix_strip: str
    :param fileset_temporary_mount_prefix: Prefix for temporary fileset ext4
     mounts
    :type fileset_temporary_mount_prefix: str
    :param default_thrift_socket_request_timeout_in_ms: The timeout for the
     thrift response
    :type default_thrift_socket_request_timeout_in_ms: int
    :param snappable_max_retry_attempts: Number of retries to add an entry
     into Snappable table
    :type snappable_max_retry_attempts: int
    :param snappable_initial_range_for_back_off_in_ms: Initial range for
     exponential backoff for Snappable insertion
    :type snappable_initial_range_for_back_off_in_ms: int
    :param max_job_fetcher_staleness_millis: Status server will report
     unhealthy status if no useful work has been done for this span of time.
    :type max_job_fetcher_staleness_millis: int
    :param job_scan_cache_base_dir: Base directory to create job scan cache
     files
    :type job_scan_cache_base_dir: str
    :param job_scan_cache_staleness_threshold_millis: Do not read a job scan
     cache from if the timestamp is older than this duration
    :type job_scan_cache_staleness_threshold_millis: int
    :param job_scan_cache_read_retry_sleep_millis: Time to sleep in between
     retries of reading job scan cache from file
    :type job_scan_cache_read_retry_sleep_millis: int
    :param snappable_index_job_frequency_in_minutes: Interval in minutes for
     the snappable index job
    :type snappable_index_job_frequency_in_minutes: int
    :param vmware_snapshot_job_retries: Number of retries for the VMware
     snapshot job
    :type vmware_snapshot_job_retries: int
    :param hyperv_snapshot_job_retries: Number of retries for the hyperv
     snapshot job
    :type hyperv_snapshot_job_retries: int
    :param disable_network_on_cloned_vm: Disable network on exported, restored
     or mounted VM
    :type disable_network_on_cloned_vm: bool
    :param nutanix_snapshot_job_retries: Number of retries for the Nutanix
     snapshot job
    :type nutanix_snapshot_job_retries: int
    :param fileset_snapshot_job_retries: Number of retries for the fileset
     snapshot job
    :type fileset_snapshot_job_retries: int
    :param fileset_max_parallel_streams: Maximum number of parallel streams we
     can have at the same time when fetching filesets
    :type fileset_max_parallel_streams: int
    :param fileset_max_volume_size_mb: Maximum size for a Fileset volume.
    :type fileset_max_volume_size_mb: int
    :param fileset_min_volume_size_mb: Minimum size for a Fileset volume.
    :type fileset_min_volume_size_mb: int
    :param fileset_optimal_num_disks: Optimal number of disks per snapshot
    :type fileset_optimal_num_disks: int
    :param fileset_extra_slack_percent: Extra percentage to be added to
     physical space estimates with the purpose of accomodating estimation
     errors.
    :type fileset_extra_slack_percent: int
    :param fileset_extra_slack_percent_first_snapshot: Extra percentage to be
     added to the first snapshot's physical space estimate with the purpose of
     delaying the growth in number of disks.
    :type fileset_extra_slack_percent_first_snapshot: int
    :param fileset_change_percent_threshold_for_new_base_snapshot: Fileset
     change percentage threshold that is used to ignore the previous base
     snapshot and recreate a new base.
    :type fileset_change_percent_threshold_for_new_base_snapshot: int
    :param mssql_snapshot_job_retries: Number of retries for the Mssql
     snapshot job
    :type mssql_snapshot_job_retries: int
    :param
     self_refreshing_in_memory_cache_max_acceptable_staleness_in_minutes: If
     the cached value is stale for more than these many minutes, a cache
     refresh will be triggered.
    :type self_refreshing_in_memory_cache_max_acceptable_staleness_in_minutes:
     int
    :param maximum_db_log_blob_chain_length: The maximum number of blobs in a
     single blob chain for database logs
    :type maximum_db_log_blob_chain_length: int
    :param chunk_download_retry_count: Retry count for chunk download from
     object store in case of a network flap
    :type chunk_download_retry_count: int
    :param chunk_download_backoff_initial_range_in_ms: Initial back off time
     for chunk download in case of a failure
    :type chunk_download_backoff_initial_range_in_ms: int
    :param audit_job_max_time_in_mins_for_job_to_run: Max time allowed for a
     job to run
    :type audit_job_max_time_in_mins_for_job_to_run: int
    :param audit_job_continuous_failed_count_threshold: Number of continuous
     failed jobs that will trigger an alert
    :type audit_job_continuous_failed_count_threshold: int
    :param audit_job_consideration_period_in_hours: Audit job takes a time
     interval from the start time of the job for which it will audit the  jobs
    :type audit_job_consideration_period_in_hours: int
    :param audit_job_stagnation_threshold_in_hours: Number of hours for a job
     to be considered "stagnant"
    :type audit_job_stagnation_threshold_in_hours: int
    :param audit_job_cancelation_threshold_in_hours: Number of hours for a
     job's cancelation to be considered failed
    :type audit_job_cancelation_threshold_in_hours: int
    :param job_maintainer_scan_cache_num_threads: Number of threads to be used
     by job maintainer task to cache data
    :type job_maintainer_scan_cache_num_threads: int
    :param job_maintainer_scan_cache_min_num_shards: Initial number of shards
     to split the job table scan into. This will be increased dynamically if
     TargetJobsPerShard is exceeded.
    :type job_maintainer_scan_cache_min_num_shards: int
    :param job_maintainer_scan_cache_target_jobs_per_shard: Max number of jobs
     we want in each shard. Bigger may speed up the scan, but will make
     failures/retries more expensive.
    :type job_maintainer_scan_cache_target_jobs_per_shard: int
    :param job_maintainer_scan_cache_max_retries_per_shard: Number of times to
     retry fetching a shard before giving up
    :type job_maintainer_scan_cache_max_retries_per_shard: int
    :param job_maintainer_scan_cache_retry_delay_in_ms: Time to wait between
     shard fetch retries
    :type job_maintainer_scan_cache_retry_delay_in_ms: int
    :param job_maintainer_scan_cache_max_num_shards: Upper bound on the number
     of shards that will be used for a job scan. No shard will be shrunk to
     smaller than 1/<this value> of the total token range.
    :type job_maintainer_scan_cache_max_num_shards: int
    :param memoized_metadata_thread_count: Number of threads to be used by
     MemoizedMetadata class
    :type memoized_metadata_thread_count: int
    :param max_sleep_for_immutable_directory_creation_in_ms: max random sleep
     in between retries to acquire or release the lock to create the immutable
     directories
    :type max_sleep_for_immutable_directory_creation_in_ms: int
    :param cassandra_repair_job_in_memory_sem_shares: Maximum number of
     cassandra repair jobs per node
    :type cassandra_repair_job_in_memory_sem_shares: int
    :param cassandra_repair_job_frequency_in_minutes: Frequency of cassandra
     repair jobs
    :type cassandra_repair_job_frequency_in_minutes: int
    :param enable_space_reservation: Whether to enable space reservation for
     background activities
    :type enable_space_reservation: bool
    :param reserved_space_fraction: Fraction of total space reserved for
     background activities. This is on top of the 5% reserved by sdfs.
    :type reserved_space_fraction: float
    :param max_reserved_space_per_cluster_in_mb: Max amount of reserved space
     in megabytes in a cluster.
    :type max_reserved_space_per_cluster_in_mb: int
    :param inject_cbt_corruption_exception: This is a parameter used only for
     testing the CBT corruption code path in a CREATE_SNAPSHOT job. This
     parameter should be removed once we have a better testing framework, that
     can inject failures using byteman. This parameter should be set to true
     only in test mode. If true, make the CopyBluePrintFile call fail to
     simulate CBT corruption.
    :type inject_cbt_corruption_exception: bool
    :param job_interval_tolerance_factor: This is the tolerance factor between
     two job instances's start time. Usually if we subtract the start time
     between two job instances we should be within a small factor from the job
     frequency. If this factor is greater than this factor we will log a
     message and alert back home. We provide a larger tolerance for single node
     mode because it has more limited resources to process all the jobs as
     compared to other platforms.
    :type job_interval_tolerance_factor: int
    :param cassandra_backup_job_period_minutes: Period of the cassandra backup
     job, in minutes.
    :type cassandra_backup_job_period_minutes: int
    :param num_cassandra_snapshots_to_keep_per_disk: Number of cassandra
     snapshots to keep on each HDD.
    :type num_cassandra_snapshots_to_keep_per_disk: int
    :param increased_nfc_timeout_seconds: When the flag increaseNfcTimeout is
     set, the NFC timeout will be set to this value. A value of -1 would mean
     do not change the NFC timeout setting. The default should be 360000 (100
     hours) for clone to work reliably. We are using 0 for now because this
     feature is not production ready yet.
    :type increased_nfc_timeout_seconds: int
    :param use_historic_sla_for_reports: Whether to use historic sla in custom
     reports. This is currently limited to protection task reports only.
    :type use_historic_sla_for_reports: bool
    :param enable_custom_reports: Whether to enable custom report generation
    :type enable_custom_reports: bool
    :param enable_reports_cleanup: Whether to enable global reports cleanup
     job
    :type enable_reports_cleanup: bool
    :param cleanup_reports_job_frequency_in_minutes: Frequency of reports
     cleanup job
    :type cleanup_reports_job_frequency_in_minutes: int
    :param cleanup_reports_job_in_memory_sem_shares: Maximum number of
     concurrent cleanup reports jobs per node
    :type cleanup_reports_job_in_memory_sem_shares: int
    :param cleanup_report_scratch_dir_cutoff_seconds: Staleness in seconds
     before a report file on scratch can be delete. This defaults to number one
     week.
    :type cleanup_report_scratch_dir_cutoff_seconds: int
    :param cleanup_report_job_instance_retention_days: Staleness in days
     before a report job instance can be deleted.
    :type cleanup_report_job_instance_retention_days: int
    :param cleanup_report_job_instance_interval_days: The number of days prior
     to the cutoff date for which report job instances should be deleted.
    :type cleanup_report_job_instance_interval_days: int
    :param corrupt_blobstore_chain_on_integrity_failure: Whether to mark the
     blob chain as corrupt if snapshot integrity fails for a particular group
    :type corrupt_blobstore_chain_on_integrity_failure: bool
    :param num_file_channel_transfer_retries: FileChannel.transferTo/From
     doesn't always transfer all the requested bytes, and it therefore needs to
     be retried. This is the maximum number of times we will allow it to retry.
    :type num_file_channel_transfer_retries: int
    :param smb_supported_options: Smb supported options. List of options is
     separated by a semicolon and the list of valid option values is comma
     separated.
    :type smb_supported_options: str
    :param smb_default_options: Smb default options. CSV list of options.
    :type smb_default_options: str
    :param sdfs_service_socket_timeout_in_ms: Timeout while connecting to SDFS
     service
    :type sdfs_service_socket_timeout_in_ms: int
    :param agent_server_socket_timeout_in_ms: Timeout while connecting to
     agent server service
    :type agent_server_socket_timeout_in_ms: int
    :param enable_force_full_for_big_vmdk: Whether to allow a full to be
     forced for a big vmdk
    :type enable_force_full_for_big_vmdk: bool
    :param hyperv_export_job_timeout_in_seconds: Timeout for disk copy during
     create, export, retore snapshot jobs
    :type hyperv_export_job_timeout_in_seconds: int
    :param hyperv_check_job_progress_retries: Number of retries to check copy
     job progress
    :type hyperv_check_job_progress_retries: int
    :param hyperv_check_job_progress_delay_in_ms: Delay between retries of
     check copy job progress
    :type hyperv_check_job_progress_delay_in_ms: int
    :param hyperv_wmi_job_progress_retries: Number of retries to check WMI job
     progress
    :type hyperv_wmi_job_progress_retries: int
    :param hyperv_wmi_job_progress_delay_in_ms: Delay between retries of check
     WMI job progress
    :type hyperv_wmi_job_progress_delay_in_ms: int
    :param sdfs_patch_file_creation_delay_in_ms: Delay between retries of
     checking sdfs patch file createion job progress
    :type sdfs_patch_file_creation_delay_in_ms: int
    :param grace_period_to_delete_job_in_ms: Grace period to delete a job
     partition. This is needed to avoid a race where a job partition is created
     but the very first instance is not yet populated.
    :type grace_period_to_delete_job_in_ms: int
    :param conflict_handler_op_retries: Number of retries for the conflict
     handler operations
    :type conflict_handler_op_retries: int
    :param used_storage_percent_threshold: Storage used percent threshold to
     trigger a notification.
    :type used_storage_percent_threshold: int
    :param replication_delegation_retries: Number of retries for replicaiton
     delegation requests
    :type replication_delegation_retries: int
    :param replication_delegation_delay_in_ms: Delay between retries of
     replication delegation requests
    :type replication_delegation_delay_in_ms: int
    :param allow_replication_job_prune_without_delegation: Allow pruning of
     replicaiton job instances even if delegation fails
    :type allow_replication_job_prune_without_delegation: bool
    :param jfl_server_thread_count: Number of threads to be used by jfl
     server, which is used to compute stream counts and enqueue one-off jobs.
    :type jfl_server_thread_count: int
    :param hyperv_ingest_use_single_replica: Whether to use single-replica
     (mirrored) or Reed-Solomon \\ for Hyper-V Ingest
    :type hyperv_ingest_use_single_replica: bool
    :param gc_public_cloud_image_and_instance_job_in_memory_sem_shares:
     Maximum number of concurrent GC AMI jobs per node
    :type gc_public_cloud_image_and_instance_job_in_memory_sem_shares: int
    :param gc_public_cloud_image_and_instance_job_frequency_in_minutes:
     Interval for GC jobs in minutes
    :type gc_public_cloud_image_and_instance_job_frequency_in_minutes: int
    :param job_fetcher_consecutive_errors_threshold: Number of consecutive
     errors JobFetcherLoop will tolerate before concluding something is really
     wrong, giving up, and suiciding. JFL sleeps 2 minutes between errors by
     default, so 60 consecutive errors is about 2 hours.
    :type job_fetcher_consecutive_errors_threshold: int
    """

    _attribute_map = {
        'agent_server_port': {'key': 'agentServerPort', 'type': 'int'},
        'agent_server_secure_port': {'key': 'agentServerSecurePort', 'type': 'int'},
        'agent_server_ip': {'key': 'agentServerIp', 'type': 'str'},
        'cluster_private_key': {'key': 'clusterPrivateKey', 'type': 'str'},
        'cluster_public_certificate': {'key': 'clusterPublicCertificate', 'type': 'str'},
        'archival_location_reconnect_job_in_memory_sem_shares': {'key': 'archivalLocationReconnectJobInMemorySemShares', 'type': 'int'},
        'audit_job_in_memory_sem_shares': {'key': 'auditJobInMemorySemShares', 'type': 'int'},
        'calculate_effective_sla_job_in_memory_sem_shares': {'key': 'calculateEffectiveSlaJobInMemorySemShares', 'type': 'int'},
        'cleanup_database_backup_job_in_memory_sem_shares': {'key': 'cleanupDatabaseBackupJobInMemorySemShares', 'type': 'int'},
        'clean_up_references_job_in_memory_shares': {'key': 'cleanUpReferencesJobInMemoryShares', 'type': 'int'},
        'clean_up_references_frequency_in_minutes': {'key': 'cleanUpReferencesFrequencyInMinutes', 'type': 'int'},
        'consolidate_on_cloud_job_frequency_in_minutes': {'key': 'consolidateOnCloudJobFrequencyInMinutes', 'type': 'int'},
        'create_cloud_image_job_frequency_in_mins': {'key': 'createCloudImageJobFrequencyInMins', 'type': 'int'},
        'create_cloud_image_job_in_memory_sem_shares': {'key': 'createCloudImageJobInMemorySemShares', 'type': 'int'},
        'throttle_max_ref_count': {'key': 'throttleMaxRefCount', 'type': 'int'},
        'throttle_physical_host_max_ref_count': {'key': 'throttlePhysicalHostMaxRefCount', 'type': 'int'},
        'default_page_size': {'key': 'defaultPageSize', 'type': 'int'},
        'default_sleep_for_semaphore_in_seconds': {'key': 'defaultSleepForSemaphoreInSeconds', 'type': 'int'},
        'delete_corrupt_snapshots_job_in_memory_sem_shares': {'key': 'deleteCorruptSnapshotsJobInMemorySemShares', 'type': 'int'},
        'delete_replication_source_job_in_memory_sem_shares': {'key': 'deleteReplicationSourceJobInMemorySemShares', 'type': 'int'},
        'delete_vcenter_job_in_memory_sem_shares': {'key': 'deleteVcenterJobInMemorySemShares', 'type': 'int'},
        'download_job_in_memory_sem_shares': {'key': 'downloadJobInMemorySemShares', 'type': 'int'},
        'restore_file_job_in_memory_sem_shares': {'key': 'restoreFileJobInMemorySemShares', 'type': 'int'},
        'fileset_restore_file_job_in_memory_sem_shares': {'key': 'filesetRestoreFileJobInMemorySemShares', 'type': 'int'},
        'email_reports_job_in_memory_sem_shares': {'key': 'emailReportsJobInMemorySemShares', 'type': 'int'},
        'enable_blackout_window': {'key': 'enableBlackoutWindow', 'type': 'bool'},
        'enable_disk_space_semaphore': {'key': 'enableDiskSpaceSemaphore', 'type': 'bool'},
        'enable_snapshot_integrity': {'key': 'enableSnapshotIntegrity', 'type': 'bool'},
        'snapshot_integrity_sampling_ratio': {'key': 'snapshotIntegritySamplingRatio', 'type': 'float'},
        'expire_job_frequency_in_minutes': {'key': 'expireJobFrequencyInMinutes', 'type': 'int'},
        'export_job_in_memory_sem_shares': {'key': 'exportJobInMemorySemShares', 'type': 'int'},
        'fileset_by_host_initial_range_for_back_off_in_ms': {'key': 'filesetByHostInitialRangeForBackOffInMs', 'type': 'int'},
        'fileset_by_host_max_retry_attempts': {'key': 'filesetByHostMaxRetryAttempts', 'type': 'int'},
        'fileset_backup_script_timeout_sec': {'key': 'filesetBackupScriptTimeoutSec', 'type': 'int'},
        'fileset_backup_script_error_handling': {'key': 'filesetBackupScriptErrorHandling', 'type': 'str'},
        'reference_op_max_attempts': {'key': 'referenceOpMaxAttempts', 'type': 'int'},
        'reference_op_back_off_in_ms': {'key': 'referenceOpBackOffInMs', 'type': 'int'},
        'archival_connect_job_update_retries': {'key': 'archivalConnectJobUpdateRetries', 'type': 'int'},
        'archival_disconnect_job_update_retries': {'key': 'archivalDisconnectJobUpdateRetries', 'type': 'int'},
        'archival_delete_job_update_retries': {'key': 'archivalDeleteJobUpdateRetries', 'type': 'int'},
        'recover_archived_metadata_job_retries': {'key': 'recoverArchivedMetadataJobRetries', 'type': 'int'},
        'fingerprint_frequency_in_minutes': {'key': 'fingerprintFrequencyInMinutes', 'type': 'int'},
        'frequent_stats_updater_frequency_in_minutes': {'key': 'frequentStatsUpdaterFrequencyInMinutes', 'type': 'int'},
        'frequent_stats_updater_job_in_memory_sem_shares': {'key': 'frequentStatsUpdaterJobInMemorySemShares', 'type': 'int'},
        'gc_job_frequency_in_minutes': {'key': 'gcJobFrequencyInMinutes', 'type': 'int'},
        'gc_job_in_memory_sem_shares': {'key': 'gcJobInMemorySemShares', 'type': 'int'},
        'should_throttle_backup_jobs': {'key': 'shouldThrottleBackupJobs', 'type': 'bool'},
        'backup_throttling_delay_in_minutes': {'key': 'backupThrottlingDelayInMinutes', 'type': 'int'},
        'prune_job_in_memory_sem_shares': {'key': 'pruneJobInMemorySemShares', 'type': 'int'},
        'prune_job_frequency_in_minutes': {'key': 'pruneJobFrequencyInMinutes', 'type': 'int'},
        'prune_job_pruning_age_in_days': {'key': 'pruneJobPruningAgeInDays', 'type': 'int'},
        'prune_job_pruning_count': {'key': 'pruneJobPruningCount', 'type': 'int'},
        'audit_job_frequency_in_minutes': {'key': 'auditJobFrequencyInMinutes', 'type': 'int'},
        'generate_report_templates_job_frequency_in_minutes': {'key': 'generateReportTemplatesJobFrequencyInMinutes', 'type': 'int'},
        'generate_custom_reports_job_frequency_in_minutes': {'key': 'generateCustomReportsJobFrequencyInMinutes', 'type': 'int'},
        'generate_report_templates_job_in_memory_sem_shares': {'key': 'generateReportTemplatesJobInMemorySemShares', 'type': 'int'},
        'generate_custom_reports_job_in_memory_sem_shares': {'key': 'generateCustomReportsJobInMemorySemShares', 'type': 'int'},
        'generate_report_templates_job_staggering_offset_in_minutes': {'key': 'generateReportTemplatesJobStaggeringOffsetInMinutes', 'type': 'int'},
        'generate_custom_reports_job_staggering_offset_in_minutes': {'key': 'generateCustomReportsJobStaggeringOffsetInMinutes', 'type': 'int'},
        'handle_corrupt_snapshots_job_in_memory_sem_shares': {'key': 'handleCorruptSnapshotsJobInMemorySemShares', 'type': 'int'},
        'index_max_directories_to_delete': {'key': 'indexMaxDirectoriesToDelete', 'type': 'int'},
        'index_snappable_job_max_snapshots_per_run': {'key': 'indexSnappableJobMaxSnapshotsPerRun', 'type': 'int'},
        'index_snappable_job_max_snapshots_with_index_per_run': {'key': 'indexSnappableJobMaxSnapshotsWithIndexPerRun', 'type': 'int'},
        'index_snappable_job_max_attempts_per_snapshot': {'key': 'indexSnappableJobMaxAttemptsPerSnapshot', 'type': 'int'},
        'index_snappable_job_use_uml_for_indexing': {'key': 'indexSnappableJobUseUMLForIndexing', 'type': 'bool'},
        'index_snappable_throttle_delay_in_ms': {'key': 'indexSnappableThrottleDelayInMs', 'type': 'int'},
        'index_snappable_enable_patch_cache': {'key': 'indexSnappableEnablePatchCache', 'type': 'bool'},
        'infrequent_stats_updater_frequency_in_minutes': {'key': 'infrequentStatsUpdaterFrequencyInMinutes', 'type': 'int'},
        'infrequent_stats_update_timeout_in_mins': {'key': 'infrequentStatsUpdateTimeoutInMins', 'type': 'int'},
        'infrequent_stats_updater_job_in_memory_sem_shares': {'key': 'infrequentStatsUpdaterJobInMemorySemShares', 'type': 'int'},
        'job_maintainer_frequency_in_minutes': {'key': 'jobMaintainerFrequencyInMinutes', 'type': 'int'},
        'job_maintainer_job_in_memory_sem_shares': {'key': 'jobMaintainerJobInMemorySemShares', 'type': 'int'},
        'job_staggering_range_in_minutes': {'key': 'jobStaggeringRangeInMinutes', 'type': 'int'},
        'lite_refresh_job_in_memory_sem_shares': {'key': 'liteRefreshJobInMemorySemShares', 'type': 'int'},
        'lite_refresh_job_interval_in_minutes': {'key': 'liteRefreshJobIntervalInMinutes', 'type': 'int'},
        'log_upload_enabled': {'key': 'logUploadEnabled', 'type': 'bool'},
        'log_uploader_frequency_in_minutes': {'key': 'logUploaderFrequencyInMinutes', 'type': 'int'},
        'log_uploader_job_in_memory_sem_shares': {'key': 'logUploaderJobInMemorySemShares', 'type': 'int'},
        'metadata_maintenance_job_frequency': {'key': 'metadataMaintenanceJobFrequency', 'type': 'int'},
        'metadata_maintenance_job_in_memory_sem_shares': {'key': 'metadataMaintenanceJobInMemorySemShares', 'type': 'int'},
        'mssql_log_download_max_attempts': {'key': 'mssqlLogDownloadMaxAttempts', 'type': 'int'},
        'mssql_take_snapshot_size_estimation_buffer': {'key': 'mssqlTakeSnapshotSizeEstimationBuffer', 'type': 'float'},
        'refresh_mount_shares_job_frequency_in_minutes': {'key': 'refreshMountSharesJobFrequencyInMinutes', 'type': 'int'},
        'refresh_mount_shares_job_in_memory_sem_shares': {'key': 'refreshMountSharesJobInMemorySemShares', 'type': 'int'},
        'esx_addr_resolv_job_frequency_in_minutes': {'key': 'esxAddrResolvJobFrequencyInMinutes', 'type': 'int'},
        'oracle_backup_query_frequency_in_minutes': {'key': 'oracleBackupQueryFrequencyInMinutes', 'type': 'int'},
        'oracle_backup_cleanup_frequency_in_minutes': {'key': 'oracleBackupCleanupFrequencyInMinutes', 'type': 'int'},
        'periodic_update_default_timeout_in_mins': {'key': 'periodicUpdateDefaultTimeoutInMins', 'type': 'int'},
        'periodic_update_abort_timeout_in_mins': {'key': 'periodicUpdateAbortTimeoutInMins', 'type': 'int'},
        'per_node_job_maintainer_frequency_in_minutes': {'key': 'perNodeJobMaintainerFrequencyInMinutes', 'type': 'int'},
        'pull_replicate_integrity_probability': {'key': 'pullReplicateIntegrityProbability', 'type': 'int'},
        'pull_mssql_log_replicate_job_interval_in_minutes': {'key': 'pullMssqlLogReplicateJobIntervalInMinutes', 'type': 'int'},
        'pull_replicate_close_snappable_num_retries': {'key': 'pullReplicateCloseSnappableNumRetries', 'type': 'int'},
        'maximum_replication_catchup_bound_in_days': {'key': 'maximumReplicationCatchupBoundInDays', 'type': 'int'},
        'minimum_replication_lag_allowed_in_days': {'key': 'minimumReplicationLagAllowedInDays', 'type': 'int'},
        'lagged_time_to_skip_fraction': {'key': 'laggedTimeToSkipFraction', 'type': 'float'},
        'mssql_log_upload_job_interval_in_minutes': {'key': 'mssqlLogUploadJobIntervalInMinutes', 'type': 'int'},
        'mssql_log_upload_job_max_logs_to_upload': {'key': 'mssqlLogUploadJobMaxLogsToUpload', 'type': 'int'},
        'pull_replicate_poll_period_minutes': {'key': 'pullReplicatePollPeriodMinutes', 'type': 'int'},
        'pull_replicate_job_delay_range_seconds': {'key': 'pullReplicateJobDelayRangeSeconds', 'type': 'int'},
        'query_database_backup_job_in_memory_sem_shares': {'key': 'queryDatabaseBackupJobInMemorySemShares', 'type': 'int'},
        'recover_archived_metadata_job_in_memory_sem_shares': {'key': 'recoverArchivedMetadataJobInMemorySemShares', 'type': 'int'},
        'refresh_auth_domain_job_in_memory_sem_shares': {'key': 'refreshAuthDomainJobInMemorySemShares', 'type': 'int'},
        'refresh_auth_domain_job_interval_in_minutes': {'key': 'refreshAuthDomainJobIntervalInMinutes', 'type': 'int'},
        'refresh_auth_domain_job_retries': {'key': 'refreshAuthDomainJobRetries', 'type': 'int'},
        'refresh_host_num_retries': {'key': 'refreshHostNumRetries', 'type': 'int'},
        'refresh_num_retries': {'key': 'refreshNumRetries', 'type': 'int'},
        'refresh_host_job_in_memory_sem_shares': {'key': 'refreshHostJobInMemorySemShares', 'type': 'int'},
        'refresh_job_in_memory_sem_shares': {'key': 'refreshJobInMemorySemShares', 'type': 'int'},
        'refresh_cached_objects_frequency_in_minutes': {'key': 'refreshCachedObjectsFrequencyInMinutes', 'type': 'int'},
        'refresh_host_job_interval_in_minutes': {'key': 'refreshHostJobIntervalInMinutes', 'type': 'int'},
        'refresh_job_interval_in_minutes': {'key': 'refreshJobIntervalInMinutes', 'type': 'int'},
        'esx_cbt_blacklist_alert_interval_in_ms': {'key': 'esxCbtBlacklistAlertIntervalInMs', 'type': 'int'},
        'remote_snapshot_refresh_period_minutes': {'key': 'remoteSnapshotRefreshPeriodMinutes', 'type': 'int'},
        'remote_snapshot_refresh_retry_attempts': {'key': 'remoteSnapshotRefreshRetryAttempts', 'type': 'int'},
        'remove_vmware_snapshot_issues_job_in_memory_sem_shares': {'key': 'removeVmwareSnapshotIssuesJobInMemorySemShares', 'type': 'int'},
        'snapshot_integrity_job_frequency_in_minutes': {'key': 'snapshotIntegrityJobFrequencyInMinutes', 'type': 'int'},
        'snapshot_integrity_job_in_memory_sem_shares': {'key': 'snapshotIntegrityJobInMemorySemShares', 'type': 'int'},
        'snapshot_integrity_min_snapshot_period_in_minutes': {'key': 'snapshotIntegrityMinSnapshotPeriodInMinutes', 'type': 'int'},
        'snapshot_initial_range_for_back_off_in_ms': {'key': 'snapshotInitialRangeForBackOffInMs', 'type': 'int'},
        'snapshot_max_retry_attempts': {'key': 'snapshotMaxRetryAttempts', 'type': 'int'},
        'snapshot_early_allowance_in_minutes': {'key': 'snapshotEarlyAllowanceInMinutes', 'type': 'int'},
        'snappable_group_initial_range_for_back_off_in_ms': {'key': 'snappableGroupInitialRangeForBackOffInMs', 'type': 'int'},
        'snappable_group_max_retry_attempts': {'key': 'snappableGroupMaxRetryAttempts', 'type': 'int'},
        'source_cluster_refresh_job_frequency_in_minutes': {'key': 'sourceClusterRefreshJobFrequencyInMinutes', 'type': 'int'},
        'source_cluster_refresh_job_in_memory_sem_shares': {'key': 'sourceClusterRefreshJobInMemorySemShares', 'type': 'int'},
        'source_cluster_refresh_snappable_batch_size': {'key': 'sourceClusterRefreshSnappableBatchSize', 'type': 'int'},
        'stat_collector_job_in_memory_sem_shares': {'key': 'statCollectorJobInMemorySemShares', 'type': 'int'},
        'fail_on_mount_bootup_failure': {'key': 'failOnMountBootupFailure', 'type': 'bool'},
        'fail_on_export_bootup_failure': {'key': 'failOnExportBootupFailure', 'type': 'bool'},
        'upload_job_frequency_in_minutes': {'key': 'uploadJobFrequencyInMinutes', 'type': 'int'},
        'upload_index_job_frequency_in_minutes': {'key': 'uploadIndexJobFrequencyInMinutes', 'type': 'int'},
        'archived_indexable_snapshot_expiry_threshold_in_mins': {'key': 'archivedIndexableSnapshotExpiryThresholdInMins', 'type': 'int'},
        'verify_sla_job_in_memory_sem_shares': {'key': 'verifySlaJobInMemorySemShares', 'type': 'int'},
        'verify_sla_job_frequency_in_minutes': {'key': 'verifySlaJobFrequencyInMinutes', 'type': 'int'},
        'acceptable_threshold_violation': {'key': 'acceptableThresholdViolation', 'type': 'float'},
        'first_snapshot_violation_threshold_in_hours': {'key': 'firstSnapshotViolationThresholdInHours', 'type': 'int'},
        'minimum_acceptable_sla_threshold_in_minutes': {'key': 'minimumAcceptableSlaThresholdInMinutes', 'type': 'int'},
        'maximum_acceptable_sla_threshold_in_days': {'key': 'maximumAcceptableSlaThresholdInDays', 'type': 'int'},
        'disk_space_semaphore_min_size_in_gb': {'key': 'diskSpaceSemaphoreMinSizeInGb', 'type': 'float'},
        'disk_space_semaphore_chunk_size_in_gb': {'key': 'diskSpaceSemaphoreChunkSizeInGb', 'type': 'float'},
        'distributed_semaphore_max_retry_attempts': {'key': 'distributedSemaphoreMaxRetryAttempts', 'type': 'int'},
        'distributed_semaphore_initial_range_for_back_off_in_ms': {'key': 'distributedSemaphoreInitialRangeForBackOffInMs', 'type': 'int'},
        'distributed_semaphore_max_sleep_for_retry_in_ms': {'key': 'distributedSemaphoreMaxSleepForRetryInMs', 'type': 'int'},
        'email_reports_job_frequency_in_minutes': {'key': 'emailReportsJobFrequencyInMinutes', 'type': 'int'},
        'email_reports_job_staggering_offset_in_minutes': {'key': 'emailReportsJobStaggeringOffsetInMinutes', 'type': 'int'},
        'events_ttl_in_days': {'key': 'eventsTTLInDays', 'type': 'int'},
        'notifications_ttl_in_days': {'key': 'notificationsTTLInDays', 'type': 'int'},
        'per_node_job_maintainer_job_in_memory_sem_shares': {'key': 'perNodeJobMaintainerJobInMemorySemShares', 'type': 'int'},
        'enable_disk_stream_semaphore': {'key': 'enableDiskStreamSemaphore', 'type': 'bool'},
        'archival_connecting_jobs_serialized_list': {'key': 'archivalConnectingJobsSerializedList', 'type': 'str'},
        'disk_stream_semaphore_min_size': {'key': 'diskStreamSemaphoreMinSize', 'type': 'int'},
        'disk_stream_semaphore_chunk_size': {'key': 'diskStreamSemaphoreChunkSize', 'type': 'int'},
        'disk_stream_semaphore_streams_per_disk': {'key': 'diskStreamSemaphoreStreamsPerDisk', 'type': 'float'},
        'disk_stream_semaphore_scale_factor': {'key': 'diskStreamSemaphoreScaleFactor', 'type': 'int'},
        'job_fetcher_sleep_time_seconds': {'key': 'jobFetcherSleepTimeSeconds', 'type': 'int'},
        'max_random_sleep_between_point_queries_ms': {'key': 'maxRandomSleepBetweenPointQueriesMs', 'type': 'int'},
        'always_force_full_snapshot': {'key': 'alwaysForceFullSnapshot', 'type': 'bool'},
        'ingest_vm_to_disk_threshold_in_gb': {'key': 'ingestVmToDiskThresholdInGb', 'type': 'int'},
        'snapshot_atomic_op_max_attempts': {'key': 'snapshotAtomicOpMaxAttempts', 'type': 'int'},
        'snapshot_atomic_op_initial_sleep_in_ms': {'key': 'snapshotAtomicOpInitialSleepInMs', 'type': 'int'},
        'max_random_sleep_between_virtual_machine_point_queries_ms': {'key': 'maxRandomSleepBetweenVirtualMachinePointQueriesMs', 'type': 'int'},
        'max_random_sleep_between_pages_in_ms': {'key': 'maxRandomSleepBetweenPagesInMs', 'type': 'int'},
        'blob_store_prefix_path_in_sd_snapshot': {'key': 'blobStorePrefixPathInSdSnapshot', 'type': 'str'},
        'blob_store_prefix_path_in_sd_scratch': {'key': 'blobStorePrefixPathInSdScratch', 'type': 'str'},
        'snappable_prefix_path_in_sd_snapshot': {'key': 'snappablePrefixPathInSdSnapshot', 'type': 'str'},
        'snappable_prefix_path_in_sd_scratch': {'key': 'snappablePrefixPathInSdScratch', 'type': 'str'},
        'reports_prefix_path_in_sd_snapshot': {'key': 'reportsPrefixPathInSdSnapshot', 'type': 'str'},
        'reports_prefix_path_in_sd_scratch': {'key': 'reportsPrefixPathInSdScratch', 'type': 'str'},
        'bolt_prefix_path_in_sd_scratch': {'key': 'boltPrefixPathInSdScratch', 'type': 'str'},
        'reports_dir_ttl_in_seconds': {'key': 'reportsDirTtlInSeconds', 'type': 'int'},
        'reports_csv_dir_ttl_in_seconds': {'key': 'reportsCsvDirTtlInSeconds', 'type': 'int'},
        'merged_spec_prefix_strip': {'key': 'mergedSpecPrefixStrip', 'type': 'str'},
        'fileset_temporary_mount_prefix': {'key': 'filesetTemporaryMountPrefix', 'type': 'str'},
        'default_thrift_socket_request_timeout_in_ms': {'key': 'defaultThriftSocketRequestTimeoutInMs', 'type': 'int'},
        'snappable_max_retry_attempts': {'key': 'snappableMaxRetryAttempts', 'type': 'int'},
        'snappable_initial_range_for_back_off_in_ms': {'key': 'snappableInitialRangeForBackOffInMs', 'type': 'int'},
        'max_job_fetcher_staleness_millis': {'key': 'maxJobFetcherStalenessMillis', 'type': 'int'},
        'job_scan_cache_base_dir': {'key': 'jobScanCacheBaseDir', 'type': 'str'},
        'job_scan_cache_staleness_threshold_millis': {'key': 'jobScanCacheStalenessThresholdMillis', 'type': 'int'},
        'job_scan_cache_read_retry_sleep_millis': {'key': 'jobScanCacheReadRetrySleepMillis', 'type': 'int'},
        'snappable_index_job_frequency_in_minutes': {'key': 'snappableIndexJobFrequencyInMinutes', 'type': 'int'},
        'vmware_snapshot_job_retries': {'key': 'vmwareSnapshotJobRetries', 'type': 'int'},
        'hyperv_snapshot_job_retries': {'key': 'hypervSnapshotJobRetries', 'type': 'int'},
        'disable_network_on_cloned_vm': {'key': 'disableNetworkOnClonedVm', 'type': 'bool'},
        'nutanix_snapshot_job_retries': {'key': 'nutanixSnapshotJobRetries', 'type': 'int'},
        'fileset_snapshot_job_retries': {'key': 'filesetSnapshotJobRetries', 'type': 'int'},
        'fileset_max_parallel_streams': {'key': 'filesetMaxParallelStreams', 'type': 'int'},
        'fileset_max_volume_size_mb': {'key': 'filesetMaxVolumeSizeMb', 'type': 'int'},
        'fileset_min_volume_size_mb': {'key': 'filesetMinVolumeSizeMb', 'type': 'int'},
        'fileset_optimal_num_disks': {'key': 'filesetOptimalNumDisks', 'type': 'int'},
        'fileset_extra_slack_percent': {'key': 'filesetExtraSlackPercent', 'type': 'int'},
        'fileset_extra_slack_percent_first_snapshot': {'key': 'filesetExtraSlackPercentFirstSnapshot', 'type': 'int'},
        'fileset_change_percent_threshold_for_new_base_snapshot': {'key': 'filesetChangePercentThresholdForNewBaseSnapshot', 'type': 'int'},
        'mssql_snapshot_job_retries': {'key': 'mssqlSnapshotJobRetries', 'type': 'int'},
        'self_refreshing_in_memory_cache_max_acceptable_staleness_in_minutes': {'key': 'selfRefreshingInMemoryCacheMaxAcceptableStalenessInMinutes', 'type': 'int'},
        'maximum_db_log_blob_chain_length': {'key': 'maximumDbLogBlobChainLength', 'type': 'int'},
        'chunk_download_retry_count': {'key': 'chunkDownloadRetryCount', 'type': 'int'},
        'chunk_download_backoff_initial_range_in_ms': {'key': 'chunkDownloadBackoffInitialRangeInMs', 'type': 'int'},
        'audit_job_max_time_in_mins_for_job_to_run': {'key': 'auditJobMaxTimeInMinsForJobToRun', 'type': 'int'},
        'audit_job_continuous_failed_count_threshold': {'key': 'auditJobContinuousFailedCountThreshold', 'type': 'int'},
        'audit_job_consideration_period_in_hours': {'key': 'auditJobConsiderationPeriodInHours', 'type': 'int'},
        'audit_job_stagnation_threshold_in_hours': {'key': 'auditJobStagnationThresholdInHours', 'type': 'int'},
        'audit_job_cancelation_threshold_in_hours': {'key': 'auditJobCancelationThresholdInHours', 'type': 'int'},
        'job_maintainer_scan_cache_num_threads': {'key': 'jobMaintainerScanCacheNumThreads', 'type': 'int'},
        'job_maintainer_scan_cache_min_num_shards': {'key': 'jobMaintainerScanCacheMinNumShards', 'type': 'int'},
        'job_maintainer_scan_cache_target_jobs_per_shard': {'key': 'jobMaintainerScanCacheTargetJobsPerShard', 'type': 'int'},
        'job_maintainer_scan_cache_max_retries_per_shard': {'key': 'jobMaintainerScanCacheMaxRetriesPerShard', 'type': 'int'},
        'job_maintainer_scan_cache_retry_delay_in_ms': {'key': 'jobMaintainerScanCacheRetryDelayInMs', 'type': 'int'},
        'job_maintainer_scan_cache_max_num_shards': {'key': 'jobMaintainerScanCacheMaxNumShards', 'type': 'int'},
        'memoized_metadata_thread_count': {'key': 'memoizedMetadataThreadCount', 'type': 'int'},
        'max_sleep_for_immutable_directory_creation_in_ms': {'key': 'maxSleepForImmutableDirectoryCreationInMs', 'type': 'int'},
        'cassandra_repair_job_in_memory_sem_shares': {'key': 'cassandraRepairJobInMemorySemShares', 'type': 'int'},
        'cassandra_repair_job_frequency_in_minutes': {'key': 'cassandraRepairJobFrequencyInMinutes', 'type': 'int'},
        'enable_space_reservation': {'key': 'enableSpaceReservation', 'type': 'bool'},
        'reserved_space_fraction': {'key': 'reservedSpaceFraction', 'type': 'float'},
        'max_reserved_space_per_cluster_in_mb': {'key': 'maxReservedSpacePerClusterInMb', 'type': 'int'},
        'inject_cbt_corruption_exception': {'key': 'injectCbtCorruptionException', 'type': 'bool'},
        'job_interval_tolerance_factor': {'key': 'jobIntervalToleranceFactor', 'type': 'int'},
        'cassandra_backup_job_period_minutes': {'key': 'cassandraBackupJobPeriodMinutes', 'type': 'int'},
        'num_cassandra_snapshots_to_keep_per_disk': {'key': 'numCassandraSnapshotsToKeepPerDisk', 'type': 'int'},
        'increased_nfc_timeout_seconds': {'key': 'increasedNfcTimeoutSeconds', 'type': 'int'},
        'use_historic_sla_for_reports': {'key': 'useHistoricSlaForReports', 'type': 'bool'},
        'enable_custom_reports': {'key': 'enableCustomReports', 'type': 'bool'},
        'enable_reports_cleanup': {'key': 'enableReportsCleanup', 'type': 'bool'},
        'cleanup_reports_job_frequency_in_minutes': {'key': 'cleanupReportsJobFrequencyInMinutes', 'type': 'int'},
        'cleanup_reports_job_in_memory_sem_shares': {'key': 'cleanupReportsJobInMemorySemShares', 'type': 'int'},
        'cleanup_report_scratch_dir_cutoff_seconds': {'key': 'cleanupReportScratchDirCutoffSeconds', 'type': 'int'},
        'cleanup_report_job_instance_retention_days': {'key': 'cleanupReportJobInstanceRetentionDays', 'type': 'int'},
        'cleanup_report_job_instance_interval_days': {'key': 'cleanupReportJobInstanceIntervalDays', 'type': 'int'},
        'corrupt_blobstore_chain_on_integrity_failure': {'key': 'corruptBlobstoreChainOnIntegrityFailure', 'type': 'bool'},
        'num_file_channel_transfer_retries': {'key': 'numFileChannelTransferRetries', 'type': 'int'},
        'smb_supported_options': {'key': 'smbSupportedOptions', 'type': 'str'},
        'smb_default_options': {'key': 'smbDefaultOptions', 'type': 'str'},
        'sdfs_service_socket_timeout_in_ms': {'key': 'sdfsServiceSocketTimeoutInMs', 'type': 'int'},
        'agent_server_socket_timeout_in_ms': {'key': 'agentServerSocketTimeoutInMs', 'type': 'int'},
        'enable_force_full_for_big_vmdk': {'key': 'enableForceFullForBigVmdk', 'type': 'bool'},
        'hyperv_export_job_timeout_in_seconds': {'key': 'hypervExportJobTimeoutInSeconds', 'type': 'int'},
        'hyperv_check_job_progress_retries': {'key': 'hypervCheckJobProgressRetries', 'type': 'int'},
        'hyperv_check_job_progress_delay_in_ms': {'key': 'hypervCheckJobProgressDelayInMs', 'type': 'int'},
        'hyperv_wmi_job_progress_retries': {'key': 'hypervWmiJobProgressRetries', 'type': 'int'},
        'hyperv_wmi_job_progress_delay_in_ms': {'key': 'hypervWmiJobProgressDelayInMs', 'type': 'int'},
        'sdfs_patch_file_creation_delay_in_ms': {'key': 'sdfsPatchFIleCreationDelayInMs', 'type': 'int'},
        'grace_period_to_delete_job_in_ms': {'key': 'gracePeriodToDeleteJobInMs', 'type': 'int'},
        'conflict_handler_op_retries': {'key': 'conflictHandlerOpRetries', 'type': 'int'},
        'used_storage_percent_threshold': {'key': 'usedStoragePercentThreshold', 'type': 'int'},
        'replication_delegation_retries': {'key': 'replicationDelegationRetries', 'type': 'int'},
        'replication_delegation_delay_in_ms': {'key': 'replicationDelegationDelayInMs', 'type': 'int'},
        'allow_replication_job_prune_without_delegation': {'key': 'allowReplicationJobPruneWithoutDelegation', 'type': 'bool'},
        'jfl_server_thread_count': {'key': 'jflServerThreadCount', 'type': 'int'},
        'hyperv_ingest_use_single_replica': {'key': 'hypervIngestUseSingleReplica', 'type': 'bool'},
        'gc_public_cloud_image_and_instance_job_in_memory_sem_shares': {'key': 'gcPublicCloudImageAndInstanceJobInMemorySemShares', 'type': 'int'},
        'gc_public_cloud_image_and_instance_job_frequency_in_minutes': {'key': 'gcPublicCloudImageAndInstanceJobFrequencyInMinutes', 'type': 'int'},
        'job_fetcher_consecutive_errors_threshold': {'key': 'jobFetcherConsecutiveErrorsThreshold', 'type': 'int'},
    }

    def __init__(self, agent_server_port=None, agent_server_secure_port=None, agent_server_ip=None, cluster_private_key=None, cluster_public_certificate=None, archival_location_reconnect_job_in_memory_sem_shares=None, audit_job_in_memory_sem_shares=None, calculate_effective_sla_job_in_memory_sem_shares=None, cleanup_database_backup_job_in_memory_sem_shares=None, clean_up_references_job_in_memory_shares=None, clean_up_references_frequency_in_minutes=None, consolidate_on_cloud_job_frequency_in_minutes=None, create_cloud_image_job_frequency_in_mins=None, create_cloud_image_job_in_memory_sem_shares=None, throttle_max_ref_count=None, throttle_physical_host_max_ref_count=None, default_page_size=None, default_sleep_for_semaphore_in_seconds=None, delete_corrupt_snapshots_job_in_memory_sem_shares=None, delete_replication_source_job_in_memory_sem_shares=None, delete_vcenter_job_in_memory_sem_shares=None, download_job_in_memory_sem_shares=None, restore_file_job_in_memory_sem_shares=None, fileset_restore_file_job_in_memory_sem_shares=None, email_reports_job_in_memory_sem_shares=None, enable_blackout_window=None, enable_disk_space_semaphore=None, enable_snapshot_integrity=None, snapshot_integrity_sampling_ratio=None, expire_job_frequency_in_minutes=None, export_job_in_memory_sem_shares=None, fileset_by_host_initial_range_for_back_off_in_ms=None, fileset_by_host_max_retry_attempts=None, fileset_backup_script_timeout_sec=None, fileset_backup_script_error_handling=None, reference_op_max_attempts=None, reference_op_back_off_in_ms=None, archival_connect_job_update_retries=None, archival_disconnect_job_update_retries=None, archival_delete_job_update_retries=None, recover_archived_metadata_job_retries=None, fingerprint_frequency_in_minutes=None, frequent_stats_updater_frequency_in_minutes=None, frequent_stats_updater_job_in_memory_sem_shares=None, gc_job_frequency_in_minutes=None, gc_job_in_memory_sem_shares=None, should_throttle_backup_jobs=None, backup_throttling_delay_in_minutes=None, prune_job_in_memory_sem_shares=None, prune_job_frequency_in_minutes=None, prune_job_pruning_age_in_days=None, prune_job_pruning_count=None, audit_job_frequency_in_minutes=None, generate_report_templates_job_frequency_in_minutes=None, generate_custom_reports_job_frequency_in_minutes=None, generate_report_templates_job_in_memory_sem_shares=None, generate_custom_reports_job_in_memory_sem_shares=None, generate_report_templates_job_staggering_offset_in_minutes=None, generate_custom_reports_job_staggering_offset_in_minutes=None, handle_corrupt_snapshots_job_in_memory_sem_shares=None, index_max_directories_to_delete=None, index_snappable_job_max_snapshots_per_run=None, index_snappable_job_max_snapshots_with_index_per_run=None, index_snappable_job_max_attempts_per_snapshot=None, index_snappable_job_use_uml_for_indexing=None, index_snappable_throttle_delay_in_ms=None, index_snappable_enable_patch_cache=None, infrequent_stats_updater_frequency_in_minutes=None, infrequent_stats_update_timeout_in_mins=None, infrequent_stats_updater_job_in_memory_sem_shares=None, job_maintainer_frequency_in_minutes=None, job_maintainer_job_in_memory_sem_shares=None, job_staggering_range_in_minutes=None, lite_refresh_job_in_memory_sem_shares=None, lite_refresh_job_interval_in_minutes=None, log_upload_enabled=None, log_uploader_frequency_in_minutes=None, log_uploader_job_in_memory_sem_shares=None, metadata_maintenance_job_frequency=None, metadata_maintenance_job_in_memory_sem_shares=None, mssql_log_download_max_attempts=None, mssql_take_snapshot_size_estimation_buffer=None, refresh_mount_shares_job_frequency_in_minutes=None, refresh_mount_shares_job_in_memory_sem_shares=None, esx_addr_resolv_job_frequency_in_minutes=None, oracle_backup_query_frequency_in_minutes=None, oracle_backup_cleanup_frequency_in_minutes=None, periodic_update_default_timeout_in_mins=None, periodic_update_abort_timeout_in_mins=None, per_node_job_maintainer_frequency_in_minutes=None, pull_replicate_integrity_probability=None, pull_mssql_log_replicate_job_interval_in_minutes=None, pull_replicate_close_snappable_num_retries=None, maximum_replication_catchup_bound_in_days=None, minimum_replication_lag_allowed_in_days=None, lagged_time_to_skip_fraction=None, mssql_log_upload_job_interval_in_minutes=None, mssql_log_upload_job_max_logs_to_upload=None, pull_replicate_poll_period_minutes=None, pull_replicate_job_delay_range_seconds=None, query_database_backup_job_in_memory_sem_shares=None, recover_archived_metadata_job_in_memory_sem_shares=None, refresh_auth_domain_job_in_memory_sem_shares=None, refresh_auth_domain_job_interval_in_minutes=None, refresh_auth_domain_job_retries=None, refresh_host_num_retries=None, refresh_num_retries=None, refresh_host_job_in_memory_sem_shares=None, refresh_job_in_memory_sem_shares=None, refresh_cached_objects_frequency_in_minutes=None, refresh_host_job_interval_in_minutes=None, refresh_job_interval_in_minutes=None, esx_cbt_blacklist_alert_interval_in_ms=None, remote_snapshot_refresh_period_minutes=None, remote_snapshot_refresh_retry_attempts=None, remove_vmware_snapshot_issues_job_in_memory_sem_shares=None, snapshot_integrity_job_frequency_in_minutes=None, snapshot_integrity_job_in_memory_sem_shares=None, snapshot_integrity_min_snapshot_period_in_minutes=None, snapshot_initial_range_for_back_off_in_ms=None, snapshot_max_retry_attempts=None, snapshot_early_allowance_in_minutes=None, snappable_group_initial_range_for_back_off_in_ms=None, snappable_group_max_retry_attempts=None, source_cluster_refresh_job_frequency_in_minutes=None, source_cluster_refresh_job_in_memory_sem_shares=None, source_cluster_refresh_snappable_batch_size=None, stat_collector_job_in_memory_sem_shares=None, fail_on_mount_bootup_failure=None, fail_on_export_bootup_failure=None, upload_job_frequency_in_minutes=None, upload_index_job_frequency_in_minutes=None, archived_indexable_snapshot_expiry_threshold_in_mins=None, verify_sla_job_in_memory_sem_shares=None, verify_sla_job_frequency_in_minutes=None, acceptable_threshold_violation=None, first_snapshot_violation_threshold_in_hours=None, minimum_acceptable_sla_threshold_in_minutes=None, maximum_acceptable_sla_threshold_in_days=None, disk_space_semaphore_min_size_in_gb=None, disk_space_semaphore_chunk_size_in_gb=None, distributed_semaphore_max_retry_attempts=None, distributed_semaphore_initial_range_for_back_off_in_ms=None, distributed_semaphore_max_sleep_for_retry_in_ms=None, email_reports_job_frequency_in_minutes=None, email_reports_job_staggering_offset_in_minutes=None, events_ttl_in_days=None, notifications_ttl_in_days=None, per_node_job_maintainer_job_in_memory_sem_shares=None, enable_disk_stream_semaphore=None, archival_connecting_jobs_serialized_list=None, disk_stream_semaphore_min_size=None, disk_stream_semaphore_chunk_size=None, disk_stream_semaphore_streams_per_disk=None, disk_stream_semaphore_scale_factor=None, job_fetcher_sleep_time_seconds=None, max_random_sleep_between_point_queries_ms=None, always_force_full_snapshot=None, ingest_vm_to_disk_threshold_in_gb=None, snapshot_atomic_op_max_attempts=None, snapshot_atomic_op_initial_sleep_in_ms=None, max_random_sleep_between_virtual_machine_point_queries_ms=None, max_random_sleep_between_pages_in_ms=None, blob_store_prefix_path_in_sd_snapshot=None, blob_store_prefix_path_in_sd_scratch=None, snappable_prefix_path_in_sd_snapshot=None, snappable_prefix_path_in_sd_scratch=None, reports_prefix_path_in_sd_snapshot=None, reports_prefix_path_in_sd_scratch=None, bolt_prefix_path_in_sd_scratch=None, reports_dir_ttl_in_seconds=None, reports_csv_dir_ttl_in_seconds=None, merged_spec_prefix_strip=None, fileset_temporary_mount_prefix=None, default_thrift_socket_request_timeout_in_ms=None, snappable_max_retry_attempts=None, snappable_initial_range_for_back_off_in_ms=None, max_job_fetcher_staleness_millis=None, job_scan_cache_base_dir=None, job_scan_cache_staleness_threshold_millis=None, job_scan_cache_read_retry_sleep_millis=None, snappable_index_job_frequency_in_minutes=None, vmware_snapshot_job_retries=None, hyperv_snapshot_job_retries=None, disable_network_on_cloned_vm=None, nutanix_snapshot_job_retries=None, fileset_snapshot_job_retries=None, fileset_max_parallel_streams=None, fileset_max_volume_size_mb=None, fileset_min_volume_size_mb=None, fileset_optimal_num_disks=None, fileset_extra_slack_percent=None, fileset_extra_slack_percent_first_snapshot=None, fileset_change_percent_threshold_for_new_base_snapshot=None, mssql_snapshot_job_retries=None, self_refreshing_in_memory_cache_max_acceptable_staleness_in_minutes=None, maximum_db_log_blob_chain_length=None, chunk_download_retry_count=None, chunk_download_backoff_initial_range_in_ms=None, audit_job_max_time_in_mins_for_job_to_run=None, audit_job_continuous_failed_count_threshold=None, audit_job_consideration_period_in_hours=None, audit_job_stagnation_threshold_in_hours=None, audit_job_cancelation_threshold_in_hours=None, job_maintainer_scan_cache_num_threads=None, job_maintainer_scan_cache_min_num_shards=None, job_maintainer_scan_cache_target_jobs_per_shard=None, job_maintainer_scan_cache_max_retries_per_shard=None, job_maintainer_scan_cache_retry_delay_in_ms=None, job_maintainer_scan_cache_max_num_shards=None, memoized_metadata_thread_count=None, max_sleep_for_immutable_directory_creation_in_ms=None, cassandra_repair_job_in_memory_sem_shares=None, cassandra_repair_job_frequency_in_minutes=None, enable_space_reservation=None, reserved_space_fraction=None, max_reserved_space_per_cluster_in_mb=None, inject_cbt_corruption_exception=None, job_interval_tolerance_factor=None, cassandra_backup_job_period_minutes=None, num_cassandra_snapshots_to_keep_per_disk=None, increased_nfc_timeout_seconds=None, use_historic_sla_for_reports=None, enable_custom_reports=None, enable_reports_cleanup=None, cleanup_reports_job_frequency_in_minutes=None, cleanup_reports_job_in_memory_sem_shares=None, cleanup_report_scratch_dir_cutoff_seconds=None, cleanup_report_job_instance_retention_days=None, cleanup_report_job_instance_interval_days=None, corrupt_blobstore_chain_on_integrity_failure=None, num_file_channel_transfer_retries=None, smb_supported_options=None, smb_default_options=None, sdfs_service_socket_timeout_in_ms=None, agent_server_socket_timeout_in_ms=None, enable_force_full_for_big_vmdk=None, hyperv_export_job_timeout_in_seconds=None, hyperv_check_job_progress_retries=None, hyperv_check_job_progress_delay_in_ms=None, hyperv_wmi_job_progress_retries=None, hyperv_wmi_job_progress_delay_in_ms=None, sdfs_patch_file_creation_delay_in_ms=None, grace_period_to_delete_job_in_ms=None, conflict_handler_op_retries=None, used_storage_percent_threshold=None, replication_delegation_retries=None, replication_delegation_delay_in_ms=None, allow_replication_job_prune_without_delegation=None, jfl_server_thread_count=None, hyperv_ingest_use_single_replica=None, gc_public_cloud_image_and_instance_job_in_memory_sem_shares=None, gc_public_cloud_image_and_instance_job_frequency_in_minutes=None, job_fetcher_consecutive_errors_threshold=None):
        self.agent_server_port = agent_server_port
        self.agent_server_secure_port = agent_server_secure_port
        self.agent_server_ip = agent_server_ip
        self.cluster_private_key = cluster_private_key
        self.cluster_public_certificate = cluster_public_certificate
        self.archival_location_reconnect_job_in_memory_sem_shares = archival_location_reconnect_job_in_memory_sem_shares
        self.audit_job_in_memory_sem_shares = audit_job_in_memory_sem_shares
        self.calculate_effective_sla_job_in_memory_sem_shares = calculate_effective_sla_job_in_memory_sem_shares
        self.cleanup_database_backup_job_in_memory_sem_shares = cleanup_database_backup_job_in_memory_sem_shares
        self.clean_up_references_job_in_memory_shares = clean_up_references_job_in_memory_shares
        self.clean_up_references_frequency_in_minutes = clean_up_references_frequency_in_minutes
        self.consolidate_on_cloud_job_frequency_in_minutes = consolidate_on_cloud_job_frequency_in_minutes
        self.create_cloud_image_job_frequency_in_mins = create_cloud_image_job_frequency_in_mins
        self.create_cloud_image_job_in_memory_sem_shares = create_cloud_image_job_in_memory_sem_shares
        self.throttle_max_ref_count = throttle_max_ref_count
        self.throttle_physical_host_max_ref_count = throttle_physical_host_max_ref_count
        self.default_page_size = default_page_size
        self.default_sleep_for_semaphore_in_seconds = default_sleep_for_semaphore_in_seconds
        self.delete_corrupt_snapshots_job_in_memory_sem_shares = delete_corrupt_snapshots_job_in_memory_sem_shares
        self.delete_replication_source_job_in_memory_sem_shares = delete_replication_source_job_in_memory_sem_shares
        self.delete_vcenter_job_in_memory_sem_shares = delete_vcenter_job_in_memory_sem_shares
        self.download_job_in_memory_sem_shares = download_job_in_memory_sem_shares
        self.restore_file_job_in_memory_sem_shares = restore_file_job_in_memory_sem_shares
        self.fileset_restore_file_job_in_memory_sem_shares = fileset_restore_file_job_in_memory_sem_shares
        self.email_reports_job_in_memory_sem_shares = email_reports_job_in_memory_sem_shares
        self.enable_blackout_window = enable_blackout_window
        self.enable_disk_space_semaphore = enable_disk_space_semaphore
        self.enable_snapshot_integrity = enable_snapshot_integrity
        self.snapshot_integrity_sampling_ratio = snapshot_integrity_sampling_ratio
        self.expire_job_frequency_in_minutes = expire_job_frequency_in_minutes
        self.export_job_in_memory_sem_shares = export_job_in_memory_sem_shares
        self.fileset_by_host_initial_range_for_back_off_in_ms = fileset_by_host_initial_range_for_back_off_in_ms
        self.fileset_by_host_max_retry_attempts = fileset_by_host_max_retry_attempts
        self.fileset_backup_script_timeout_sec = fileset_backup_script_timeout_sec
        self.fileset_backup_script_error_handling = fileset_backup_script_error_handling
        self.reference_op_max_attempts = reference_op_max_attempts
        self.reference_op_back_off_in_ms = reference_op_back_off_in_ms
        self.archival_connect_job_update_retries = archival_connect_job_update_retries
        self.archival_disconnect_job_update_retries = archival_disconnect_job_update_retries
        self.archival_delete_job_update_retries = archival_delete_job_update_retries
        self.recover_archived_metadata_job_retries = recover_archived_metadata_job_retries
        self.fingerprint_frequency_in_minutes = fingerprint_frequency_in_minutes
        self.frequent_stats_updater_frequency_in_minutes = frequent_stats_updater_frequency_in_minutes
        self.frequent_stats_updater_job_in_memory_sem_shares = frequent_stats_updater_job_in_memory_sem_shares
        self.gc_job_frequency_in_minutes = gc_job_frequency_in_minutes
        self.gc_job_in_memory_sem_shares = gc_job_in_memory_sem_shares
        self.should_throttle_backup_jobs = should_throttle_backup_jobs
        self.backup_throttling_delay_in_minutes = backup_throttling_delay_in_minutes
        self.prune_job_in_memory_sem_shares = prune_job_in_memory_sem_shares
        self.prune_job_frequency_in_minutes = prune_job_frequency_in_minutes
        self.prune_job_pruning_age_in_days = prune_job_pruning_age_in_days
        self.prune_job_pruning_count = prune_job_pruning_count
        self.audit_job_frequency_in_minutes = audit_job_frequency_in_minutes
        self.generate_report_templates_job_frequency_in_minutes = generate_report_templates_job_frequency_in_minutes
        self.generate_custom_reports_job_frequency_in_minutes = generate_custom_reports_job_frequency_in_minutes
        self.generate_report_templates_job_in_memory_sem_shares = generate_report_templates_job_in_memory_sem_shares
        self.generate_custom_reports_job_in_memory_sem_shares = generate_custom_reports_job_in_memory_sem_shares
        self.generate_report_templates_job_staggering_offset_in_minutes = generate_report_templates_job_staggering_offset_in_minutes
        self.generate_custom_reports_job_staggering_offset_in_minutes = generate_custom_reports_job_staggering_offset_in_minutes
        self.handle_corrupt_snapshots_job_in_memory_sem_shares = handle_corrupt_snapshots_job_in_memory_sem_shares
        self.index_max_directories_to_delete = index_max_directories_to_delete
        self.index_snappable_job_max_snapshots_per_run = index_snappable_job_max_snapshots_per_run
        self.index_snappable_job_max_snapshots_with_index_per_run = index_snappable_job_max_snapshots_with_index_per_run
        self.index_snappable_job_max_attempts_per_snapshot = index_snappable_job_max_attempts_per_snapshot
        self.index_snappable_job_use_uml_for_indexing = index_snappable_job_use_uml_for_indexing
        self.index_snappable_throttle_delay_in_ms = index_snappable_throttle_delay_in_ms
        self.index_snappable_enable_patch_cache = index_snappable_enable_patch_cache
        self.infrequent_stats_updater_frequency_in_minutes = infrequent_stats_updater_frequency_in_minutes
        self.infrequent_stats_update_timeout_in_mins = infrequent_stats_update_timeout_in_mins
        self.infrequent_stats_updater_job_in_memory_sem_shares = infrequent_stats_updater_job_in_memory_sem_shares
        self.job_maintainer_frequency_in_minutes = job_maintainer_frequency_in_minutes
        self.job_maintainer_job_in_memory_sem_shares = job_maintainer_job_in_memory_sem_shares
        self.job_staggering_range_in_minutes = job_staggering_range_in_minutes
        self.lite_refresh_job_in_memory_sem_shares = lite_refresh_job_in_memory_sem_shares
        self.lite_refresh_job_interval_in_minutes = lite_refresh_job_interval_in_minutes
        self.log_upload_enabled = log_upload_enabled
        self.log_uploader_frequency_in_minutes = log_uploader_frequency_in_minutes
        self.log_uploader_job_in_memory_sem_shares = log_uploader_job_in_memory_sem_shares
        self.metadata_maintenance_job_frequency = metadata_maintenance_job_frequency
        self.metadata_maintenance_job_in_memory_sem_shares = metadata_maintenance_job_in_memory_sem_shares
        self.mssql_log_download_max_attempts = mssql_log_download_max_attempts
        self.mssql_take_snapshot_size_estimation_buffer = mssql_take_snapshot_size_estimation_buffer
        self.refresh_mount_shares_job_frequency_in_minutes = refresh_mount_shares_job_frequency_in_minutes
        self.refresh_mount_shares_job_in_memory_sem_shares = refresh_mount_shares_job_in_memory_sem_shares
        self.esx_addr_resolv_job_frequency_in_minutes = esx_addr_resolv_job_frequency_in_minutes
        self.oracle_backup_query_frequency_in_minutes = oracle_backup_query_frequency_in_minutes
        self.oracle_backup_cleanup_frequency_in_minutes = oracle_backup_cleanup_frequency_in_minutes
        self.periodic_update_default_timeout_in_mins = periodic_update_default_timeout_in_mins
        self.periodic_update_abort_timeout_in_mins = periodic_update_abort_timeout_in_mins
        self.per_node_job_maintainer_frequency_in_minutes = per_node_job_maintainer_frequency_in_minutes
        self.pull_replicate_integrity_probability = pull_replicate_integrity_probability
        self.pull_mssql_log_replicate_job_interval_in_minutes = pull_mssql_log_replicate_job_interval_in_minutes
        self.pull_replicate_close_snappable_num_retries = pull_replicate_close_snappable_num_retries
        self.maximum_replication_catchup_bound_in_days = maximum_replication_catchup_bound_in_days
        self.minimum_replication_lag_allowed_in_days = minimum_replication_lag_allowed_in_days
        self.lagged_time_to_skip_fraction = lagged_time_to_skip_fraction
        self.mssql_log_upload_job_interval_in_minutes = mssql_log_upload_job_interval_in_minutes
        self.mssql_log_upload_job_max_logs_to_upload = mssql_log_upload_job_max_logs_to_upload
        self.pull_replicate_poll_period_minutes = pull_replicate_poll_period_minutes
        self.pull_replicate_job_delay_range_seconds = pull_replicate_job_delay_range_seconds
        self.query_database_backup_job_in_memory_sem_shares = query_database_backup_job_in_memory_sem_shares
        self.recover_archived_metadata_job_in_memory_sem_shares = recover_archived_metadata_job_in_memory_sem_shares
        self.refresh_auth_domain_job_in_memory_sem_shares = refresh_auth_domain_job_in_memory_sem_shares
        self.refresh_auth_domain_job_interval_in_minutes = refresh_auth_domain_job_interval_in_minutes
        self.refresh_auth_domain_job_retries = refresh_auth_domain_job_retries
        self.refresh_host_num_retries = refresh_host_num_retries
        self.refresh_num_retries = refresh_num_retries
        self.refresh_host_job_in_memory_sem_shares = refresh_host_job_in_memory_sem_shares
        self.refresh_job_in_memory_sem_shares = refresh_job_in_memory_sem_shares
        self.refresh_cached_objects_frequency_in_minutes = refresh_cached_objects_frequency_in_minutes
        self.refresh_host_job_interval_in_minutes = refresh_host_job_interval_in_minutes
        self.refresh_job_interval_in_minutes = refresh_job_interval_in_minutes
        self.esx_cbt_blacklist_alert_interval_in_ms = esx_cbt_blacklist_alert_interval_in_ms
        self.remote_snapshot_refresh_period_minutes = remote_snapshot_refresh_period_minutes
        self.remote_snapshot_refresh_retry_attempts = remote_snapshot_refresh_retry_attempts
        self.remove_vmware_snapshot_issues_job_in_memory_sem_shares = remove_vmware_snapshot_issues_job_in_memory_sem_shares
        self.snapshot_integrity_job_frequency_in_minutes = snapshot_integrity_job_frequency_in_minutes
        self.snapshot_integrity_job_in_memory_sem_shares = snapshot_integrity_job_in_memory_sem_shares
        self.snapshot_integrity_min_snapshot_period_in_minutes = snapshot_integrity_min_snapshot_period_in_minutes
        self.snapshot_initial_range_for_back_off_in_ms = snapshot_initial_range_for_back_off_in_ms
        self.snapshot_max_retry_attempts = snapshot_max_retry_attempts
        self.snapshot_early_allowance_in_minutes = snapshot_early_allowance_in_minutes
        self.snappable_group_initial_range_for_back_off_in_ms = snappable_group_initial_range_for_back_off_in_ms
        self.snappable_group_max_retry_attempts = snappable_group_max_retry_attempts
        self.source_cluster_refresh_job_frequency_in_minutes = source_cluster_refresh_job_frequency_in_minutes
        self.source_cluster_refresh_job_in_memory_sem_shares = source_cluster_refresh_job_in_memory_sem_shares
        self.source_cluster_refresh_snappable_batch_size = source_cluster_refresh_snappable_batch_size
        self.stat_collector_job_in_memory_sem_shares = stat_collector_job_in_memory_sem_shares
        self.fail_on_mount_bootup_failure = fail_on_mount_bootup_failure
        self.fail_on_export_bootup_failure = fail_on_export_bootup_failure
        self.upload_job_frequency_in_minutes = upload_job_frequency_in_minutes
        self.upload_index_job_frequency_in_minutes = upload_index_job_frequency_in_minutes
        self.archived_indexable_snapshot_expiry_threshold_in_mins = archived_indexable_snapshot_expiry_threshold_in_mins
        self.verify_sla_job_in_memory_sem_shares = verify_sla_job_in_memory_sem_shares
        self.verify_sla_job_frequency_in_minutes = verify_sla_job_frequency_in_minutes
        self.acceptable_threshold_violation = acceptable_threshold_violation
        self.first_snapshot_violation_threshold_in_hours = first_snapshot_violation_threshold_in_hours
        self.minimum_acceptable_sla_threshold_in_minutes = minimum_acceptable_sla_threshold_in_minutes
        self.maximum_acceptable_sla_threshold_in_days = maximum_acceptable_sla_threshold_in_days
        self.disk_space_semaphore_min_size_in_gb = disk_space_semaphore_min_size_in_gb
        self.disk_space_semaphore_chunk_size_in_gb = disk_space_semaphore_chunk_size_in_gb
        self.distributed_semaphore_max_retry_attempts = distributed_semaphore_max_retry_attempts
        self.distributed_semaphore_initial_range_for_back_off_in_ms = distributed_semaphore_initial_range_for_back_off_in_ms
        self.distributed_semaphore_max_sleep_for_retry_in_ms = distributed_semaphore_max_sleep_for_retry_in_ms
        self.email_reports_job_frequency_in_minutes = email_reports_job_frequency_in_minutes
        self.email_reports_job_staggering_offset_in_minutes = email_reports_job_staggering_offset_in_minutes
        self.events_ttl_in_days = events_ttl_in_days
        self.notifications_ttl_in_days = notifications_ttl_in_days
        self.per_node_job_maintainer_job_in_memory_sem_shares = per_node_job_maintainer_job_in_memory_sem_shares
        self.enable_disk_stream_semaphore = enable_disk_stream_semaphore
        self.archival_connecting_jobs_serialized_list = archival_connecting_jobs_serialized_list
        self.disk_stream_semaphore_min_size = disk_stream_semaphore_min_size
        self.disk_stream_semaphore_chunk_size = disk_stream_semaphore_chunk_size
        self.disk_stream_semaphore_streams_per_disk = disk_stream_semaphore_streams_per_disk
        self.disk_stream_semaphore_scale_factor = disk_stream_semaphore_scale_factor
        self.job_fetcher_sleep_time_seconds = job_fetcher_sleep_time_seconds
        self.max_random_sleep_between_point_queries_ms = max_random_sleep_between_point_queries_ms
        self.always_force_full_snapshot = always_force_full_snapshot
        self.ingest_vm_to_disk_threshold_in_gb = ingest_vm_to_disk_threshold_in_gb
        self.snapshot_atomic_op_max_attempts = snapshot_atomic_op_max_attempts
        self.snapshot_atomic_op_initial_sleep_in_ms = snapshot_atomic_op_initial_sleep_in_ms
        self.max_random_sleep_between_virtual_machine_point_queries_ms = max_random_sleep_between_virtual_machine_point_queries_ms
        self.max_random_sleep_between_pages_in_ms = max_random_sleep_between_pages_in_ms
        self.blob_store_prefix_path_in_sd_snapshot = blob_store_prefix_path_in_sd_snapshot
        self.blob_store_prefix_path_in_sd_scratch = blob_store_prefix_path_in_sd_scratch
        self.snappable_prefix_path_in_sd_snapshot = snappable_prefix_path_in_sd_snapshot
        self.snappable_prefix_path_in_sd_scratch = snappable_prefix_path_in_sd_scratch
        self.reports_prefix_path_in_sd_snapshot = reports_prefix_path_in_sd_snapshot
        self.reports_prefix_path_in_sd_scratch = reports_prefix_path_in_sd_scratch
        self.bolt_prefix_path_in_sd_scratch = bolt_prefix_path_in_sd_scratch
        self.reports_dir_ttl_in_seconds = reports_dir_ttl_in_seconds
        self.reports_csv_dir_ttl_in_seconds = reports_csv_dir_ttl_in_seconds
        self.merged_spec_prefix_strip = merged_spec_prefix_strip
        self.fileset_temporary_mount_prefix = fileset_temporary_mount_prefix
        self.default_thrift_socket_request_timeout_in_ms = default_thrift_socket_request_timeout_in_ms
        self.snappable_max_retry_attempts = snappable_max_retry_attempts
        self.snappable_initial_range_for_back_off_in_ms = snappable_initial_range_for_back_off_in_ms
        self.max_job_fetcher_staleness_millis = max_job_fetcher_staleness_millis
        self.job_scan_cache_base_dir = job_scan_cache_base_dir
        self.job_scan_cache_staleness_threshold_millis = job_scan_cache_staleness_threshold_millis
        self.job_scan_cache_read_retry_sleep_millis = job_scan_cache_read_retry_sleep_millis
        self.snappable_index_job_frequency_in_minutes = snappable_index_job_frequency_in_minutes
        self.vmware_snapshot_job_retries = vmware_snapshot_job_retries
        self.hyperv_snapshot_job_retries = hyperv_snapshot_job_retries
        self.disable_network_on_cloned_vm = disable_network_on_cloned_vm
        self.nutanix_snapshot_job_retries = nutanix_snapshot_job_retries
        self.fileset_snapshot_job_retries = fileset_snapshot_job_retries
        self.fileset_max_parallel_streams = fileset_max_parallel_streams
        self.fileset_max_volume_size_mb = fileset_max_volume_size_mb
        self.fileset_min_volume_size_mb = fileset_min_volume_size_mb
        self.fileset_optimal_num_disks = fileset_optimal_num_disks
        self.fileset_extra_slack_percent = fileset_extra_slack_percent
        self.fileset_extra_slack_percent_first_snapshot = fileset_extra_slack_percent_first_snapshot
        self.fileset_change_percent_threshold_for_new_base_snapshot = fileset_change_percent_threshold_for_new_base_snapshot
        self.mssql_snapshot_job_retries = mssql_snapshot_job_retries
        self.self_refreshing_in_memory_cache_max_acceptable_staleness_in_minutes = self_refreshing_in_memory_cache_max_acceptable_staleness_in_minutes
        self.maximum_db_log_blob_chain_length = maximum_db_log_blob_chain_length
        self.chunk_download_retry_count = chunk_download_retry_count
        self.chunk_download_backoff_initial_range_in_ms = chunk_download_backoff_initial_range_in_ms
        self.audit_job_max_time_in_mins_for_job_to_run = audit_job_max_time_in_mins_for_job_to_run
        self.audit_job_continuous_failed_count_threshold = audit_job_continuous_failed_count_threshold
        self.audit_job_consideration_period_in_hours = audit_job_consideration_period_in_hours
        self.audit_job_stagnation_threshold_in_hours = audit_job_stagnation_threshold_in_hours
        self.audit_job_cancelation_threshold_in_hours = audit_job_cancelation_threshold_in_hours
        self.job_maintainer_scan_cache_num_threads = job_maintainer_scan_cache_num_threads
        self.job_maintainer_scan_cache_min_num_shards = job_maintainer_scan_cache_min_num_shards
        self.job_maintainer_scan_cache_target_jobs_per_shard = job_maintainer_scan_cache_target_jobs_per_shard
        self.job_maintainer_scan_cache_max_retries_per_shard = job_maintainer_scan_cache_max_retries_per_shard
        self.job_maintainer_scan_cache_retry_delay_in_ms = job_maintainer_scan_cache_retry_delay_in_ms
        self.job_maintainer_scan_cache_max_num_shards = job_maintainer_scan_cache_max_num_shards
        self.memoized_metadata_thread_count = memoized_metadata_thread_count
        self.max_sleep_for_immutable_directory_creation_in_ms = max_sleep_for_immutable_directory_creation_in_ms
        self.cassandra_repair_job_in_memory_sem_shares = cassandra_repair_job_in_memory_sem_shares
        self.cassandra_repair_job_frequency_in_minutes = cassandra_repair_job_frequency_in_minutes
        self.enable_space_reservation = enable_space_reservation
        self.reserved_space_fraction = reserved_space_fraction
        self.max_reserved_space_per_cluster_in_mb = max_reserved_space_per_cluster_in_mb
        self.inject_cbt_corruption_exception = inject_cbt_corruption_exception
        self.job_interval_tolerance_factor = job_interval_tolerance_factor
        self.cassandra_backup_job_period_minutes = cassandra_backup_job_period_minutes
        self.num_cassandra_snapshots_to_keep_per_disk = num_cassandra_snapshots_to_keep_per_disk
        self.increased_nfc_timeout_seconds = increased_nfc_timeout_seconds
        self.use_historic_sla_for_reports = use_historic_sla_for_reports
        self.enable_custom_reports = enable_custom_reports
        self.enable_reports_cleanup = enable_reports_cleanup
        self.cleanup_reports_job_frequency_in_minutes = cleanup_reports_job_frequency_in_minutes
        self.cleanup_reports_job_in_memory_sem_shares = cleanup_reports_job_in_memory_sem_shares
        self.cleanup_report_scratch_dir_cutoff_seconds = cleanup_report_scratch_dir_cutoff_seconds
        self.cleanup_report_job_instance_retention_days = cleanup_report_job_instance_retention_days
        self.cleanup_report_job_instance_interval_days = cleanup_report_job_instance_interval_days
        self.corrupt_blobstore_chain_on_integrity_failure = corrupt_blobstore_chain_on_integrity_failure
        self.num_file_channel_transfer_retries = num_file_channel_transfer_retries
        self.smb_supported_options = smb_supported_options
        self.smb_default_options = smb_default_options
        self.sdfs_service_socket_timeout_in_ms = sdfs_service_socket_timeout_in_ms
        self.agent_server_socket_timeout_in_ms = agent_server_socket_timeout_in_ms
        self.enable_force_full_for_big_vmdk = enable_force_full_for_big_vmdk
        self.hyperv_export_job_timeout_in_seconds = hyperv_export_job_timeout_in_seconds
        self.hyperv_check_job_progress_retries = hyperv_check_job_progress_retries
        self.hyperv_check_job_progress_delay_in_ms = hyperv_check_job_progress_delay_in_ms
        self.hyperv_wmi_job_progress_retries = hyperv_wmi_job_progress_retries
        self.hyperv_wmi_job_progress_delay_in_ms = hyperv_wmi_job_progress_delay_in_ms
        self.sdfs_patch_file_creation_delay_in_ms = sdfs_patch_file_creation_delay_in_ms
        self.grace_period_to_delete_job_in_ms = grace_period_to_delete_job_in_ms
        self.conflict_handler_op_retries = conflict_handler_op_retries
        self.used_storage_percent_threshold = used_storage_percent_threshold
        self.replication_delegation_retries = replication_delegation_retries
        self.replication_delegation_delay_in_ms = replication_delegation_delay_in_ms
        self.allow_replication_job_prune_without_delegation = allow_replication_job_prune_without_delegation
        self.jfl_server_thread_count = jfl_server_thread_count
        self.hyperv_ingest_use_single_replica = hyperv_ingest_use_single_replica
        self.gc_public_cloud_image_and_instance_job_in_memory_sem_shares = gc_public_cloud_image_and_instance_job_in_memory_sem_shares
        self.gc_public_cloud_image_and_instance_job_frequency_in_minutes = gc_public_cloud_image_and_instance_job_frequency_in_minutes
        self.job_fetcher_consecutive_errors_threshold = job_fetcher_consecutive_errors_threshold
