# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class SlaDomainSummary(Model):
    """SlaDomainSummary.

    :param id:
    :type id: str
    :param primary_cluster_id:
    :type primary_cluster_id: str
    :param name:
    :type name: str
    :param frequencies:
    :type frequencies: list of :class:`SlaFrequency
     <rubriklib_int.models.SlaFrequency>`
    :param allowed_backup_windows:
    :type allowed_backup_windows: list of :class:`BackupWindow
     <rubriklib_int.models.BackupWindow>`
    :param first_full_allowed_backup_windows:
    :type first_full_allowed_backup_windows: list of :class:`BackupWindow
     <rubriklib_int.models.BackupWindow>`
    :param local_retention_limit: Retention limit for snapshots on the local
     Rubrik system. If none, they will remain as long as SLA requires.
    :type local_retention_limit: long
    :param archival_specs: Specification for archival locations on this SLA
    :type archival_specs: list of :class:`ArchivalSpec
     <rubriklib_int.models.ArchivalSpec>`
    :param replication_specs: Specification for replication locations on this
     SLA
    :type replication_specs: list of :class:`ReplicationSpec
     <rubriklib_int.models.ReplicationSpec>`
    :param num_dbs: The number of actively protected databases under this SLA
     domain.
    :type num_dbs: int
    :param num_filesets: The number of filesets protected under this SLA
     domain.
    :type num_filesets: int
    :param num_hyperv_vms: The number of hyperv VMs protected under this SLA
     domain.
    :type num_hyperv_vms: int
    :param num_nutanix_vms: The number of Nutanix VMs protected under this SLA
     domain.
    :type num_nutanix_vms: int
    :param num_managed_volumes: The number of Managed volumes protected under
     this SLA domain.
    :type num_managed_volumes: int
    :param num_linux_hosts: The number of linux servers, with a fileset,
     protected under this SLA domain.
    :type num_linux_hosts: int
    :param num_shares: The number of shares protected under this SLA domain.
    :type num_shares: int
    :param num_windows_hosts: The number of windows servers, with a fileset,
     protected under this SLA domain.
    :type num_windows_hosts: int
    :param num_vms:
    :type num_vms: int
    :param is_default:
    :type is_default: bool
    :param ui_color:
    :type ui_color: str
    """

    _validation = {
        'id': {'required': True},
        'primary_cluster_id': {'required': True},
        'name': {'required': True},
        'frequencies': {'required': True},
        'allowed_backup_windows': {'required': True},
        'first_full_allowed_backup_windows': {'required': True},
        'is_default': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'primary_cluster_id': {'key': 'primaryClusterId', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'frequencies': {'key': 'frequencies', 'type': '[SlaFrequency]'},
        'allowed_backup_windows': {'key': 'allowedBackupWindows', 'type': '[BackupWindow]'},
        'first_full_allowed_backup_windows': {'key': 'firstFullAllowedBackupWindows', 'type': '[BackupWindow]'},
        'local_retention_limit': {'key': 'localRetentionLimit', 'type': 'long'},
        'archival_specs': {'key': 'archivalSpecs', 'type': '[ArchivalSpec]'},
        'replication_specs': {'key': 'replicationSpecs', 'type': '[ReplicationSpec]'},
        'num_dbs': {'key': 'numDbs', 'type': 'int'},
        'num_filesets': {'key': 'numFilesets', 'type': 'int'},
        'num_hyperv_vms': {'key': 'numHypervVms', 'type': 'int'},
        'num_nutanix_vms': {'key': 'numNutanixVms', 'type': 'int'},
        'num_managed_volumes': {'key': 'numManagedVolumes', 'type': 'int'},
        'num_linux_hosts': {'key': 'numLinuxHosts', 'type': 'int'},
        'num_shares': {'key': 'numShares', 'type': 'int'},
        'num_windows_hosts': {'key': 'numWindowsHosts', 'type': 'int'},
        'num_vms': {'key': 'numVms', 'type': 'int'},
        'is_default': {'key': 'isDefault', 'type': 'bool'},
        'ui_color': {'key': 'uiColor', 'type': 'str'},
    }

    def __init__(self, id, primary_cluster_id, name, frequencies, allowed_backup_windows, first_full_allowed_backup_windows, is_default, local_retention_limit=None, archival_specs=None, replication_specs=None, num_dbs=None, num_filesets=None, num_hyperv_vms=None, num_nutanix_vms=None, num_managed_volumes=None, num_linux_hosts=None, num_shares=None, num_windows_hosts=None, num_vms=None, ui_color=None):
        self.id = id
        self.primary_cluster_id = primary_cluster_id
        self.name = name
        self.frequencies = frequencies
        self.allowed_backup_windows = allowed_backup_windows
        self.first_full_allowed_backup_windows = first_full_allowed_backup_windows
        self.local_retention_limit = local_retention_limit
        self.archival_specs = archival_specs
        self.replication_specs = replication_specs
        self.num_dbs = num_dbs
        self.num_filesets = num_filesets
        self.num_hyperv_vms = num_hyperv_vms
        self.num_nutanix_vms = num_nutanix_vms
        self.num_managed_volumes = num_managed_volumes
        self.num_linux_hosts = num_linux_hosts
        self.num_shares = num_shares
        self.num_windows_hosts = num_windows_hosts
        self.num_vms = num_vms
        self.is_default = is_default
        self.ui_color = ui_color
