# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class GlobalFilesetConfig(Model):
    """GlobalFilesetConfig.

    :param compression_type_for_rba: Compression type to use for rba
    :type compression_type_for_rba: int
    :param rba_remote_transfer_size: Maximum size for remote reads and writes
    :type rba_remote_transfer_size: int
    :param rba_bulk_transfer_size: Maximum size for bulk data transfers
    :type rba_bulk_transfer_size: int
    :param rba_bulk_copier_buffer_bytes: Threaded copier buffer for bulk
     remote reads
    :type rba_bulk_copier_buffer_bytes: int
    :param rba_file_copier_buffer_bytes: Threaded copier buffer for remote
     data copy
    :type rba_file_copier_buffer_bytes: int
    :param rba_bulk_reader_batch_files: Maximum number of files to accumulate
     in a single batch read
    :type rba_bulk_reader_batch_files: int
    :param rba_bulk_writer_batch_files: Maximum number of files to accumulate
     in a single batch write
    :type rba_bulk_writer_batch_files: int
    :param rba_bulk_writer_batch_directories: Maximum number of directories to
     accumulate in a single batch write
    :type rba_bulk_writer_batch_directories: int
    :param rba_bulk_writer_batch_symlinks: Maximum number of symlinks to
     accumulate in a single batch write
    :type rba_bulk_writer_batch_symlinks: int
    :param rba_bulk_writer_batch_set_stats: Maximum number of set stats to
     accumulate in a single batch write
    :type rba_bulk_writer_batch_set_stats: int
    :param rba_max_file_errors: Maximum number of file errors to log when
     restoring files
    :type rba_max_file_errors: int
    :param fileset_enable_patch_cache: Whether PatchCache should be enabled
     for filesets
    :type fileset_enable_patch_cache: bool
    :param fileset_ingest_use_single_replica: Whether to use single-replica
     (mirrored) or Reed-Solomon \\ for Fileset Ingest
    :type fileset_ingest_use_single_replica: bool
    :param fileset_ingest_user_facing_io_priority: Whether to set MJF IO
     priority to USER_FACING for \\ Fileset Ingest
    :type fileset_ingest_user_facing_io_priority: bool
    """

    _attribute_map = {
        'compression_type_for_rba': {'key': 'compression_type_for_rba', 'type': 'int'},
        'rba_remote_transfer_size': {'key': 'rba_remote_transfer_size', 'type': 'int'},
        'rba_bulk_transfer_size': {'key': 'rba_bulk_transfer_size', 'type': 'int'},
        'rba_bulk_copier_buffer_bytes': {'key': 'rba_bulk_copier_buffer_bytes', 'type': 'int'},
        'rba_file_copier_buffer_bytes': {'key': 'rba_file_copier_buffer_bytes', 'type': 'int'},
        'rba_bulk_reader_batch_files': {'key': 'rba_bulk_reader_batch_files', 'type': 'int'},
        'rba_bulk_writer_batch_files': {'key': 'rba_bulk_writer_batch_files', 'type': 'int'},
        'rba_bulk_writer_batch_directories': {'key': 'rba_bulk_writer_batch_directories', 'type': 'int'},
        'rba_bulk_writer_batch_symlinks': {'key': 'rba_bulk_writer_batch_symlinks', 'type': 'int'},
        'rba_bulk_writer_batch_set_stats': {'key': 'rba_bulk_writer_batch_set_stats', 'type': 'int'},
        'rba_max_file_errors': {'key': 'rba_max_file_errors', 'type': 'int'},
        'fileset_enable_patch_cache': {'key': 'filesetEnablePatchCache', 'type': 'bool'},
        'fileset_ingest_use_single_replica': {'key': 'filesetIngestUseSingleReplica', 'type': 'bool'},
        'fileset_ingest_user_facing_io_priority': {'key': 'filesetIngestUserFacingIOPriority', 'type': 'bool'},
    }

    def __init__(self, compression_type_for_rba=None, rba_remote_transfer_size=None, rba_bulk_transfer_size=None, rba_bulk_copier_buffer_bytes=None, rba_file_copier_buffer_bytes=None, rba_bulk_reader_batch_files=None, rba_bulk_writer_batch_files=None, rba_bulk_writer_batch_directories=None, rba_bulk_writer_batch_symlinks=None, rba_bulk_writer_batch_set_stats=None, rba_max_file_errors=None, fileset_enable_patch_cache=None, fileset_ingest_use_single_replica=None, fileset_ingest_user_facing_io_priority=None):
        self.compression_type_for_rba = compression_type_for_rba
        self.rba_remote_transfer_size = rba_remote_transfer_size
        self.rba_bulk_transfer_size = rba_bulk_transfer_size
        self.rba_bulk_copier_buffer_bytes = rba_bulk_copier_buffer_bytes
        self.rba_file_copier_buffer_bytes = rba_file_copier_buffer_bytes
        self.rba_bulk_reader_batch_files = rba_bulk_reader_batch_files
        self.rba_bulk_writer_batch_files = rba_bulk_writer_batch_files
        self.rba_bulk_writer_batch_directories = rba_bulk_writer_batch_directories
        self.rba_bulk_writer_batch_symlinks = rba_bulk_writer_batch_symlinks
        self.rba_bulk_writer_batch_set_stats = rba_bulk_writer_batch_set_stats
        self.rba_max_file_errors = rba_max_file_errors
        self.fileset_enable_patch_cache = fileset_enable_patch_cache
        self.fileset_ingest_use_single_replica = fileset_ingest_use_single_replica
        self.fileset_ingest_user_facing_io_priority = fileset_ingest_user_facing_io_priority
