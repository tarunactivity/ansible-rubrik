# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class GlobalMssqlConfig(Model):
    """GlobalMssqlConfig.

    :param physical_host_log_backup_throttle_max_ref_count: Maximum number of
     concurrent MSSQL log backup jobs per physical host
    :type physical_host_log_backup_throttle_max_ref_count: int
    :param mssql_dag_update_retry_attempts: Maximum number of attempts to
     update a MssqlDag when adding or removing a database ID.
    :type mssql_dag_update_retry_attempts: int
    :param file_transfer_parallelism: The number of concurrent file transfer
     requests
    :type file_transfer_parallelism: int
    :param file_transfer_block_size: Block size used to transfer file data in
     MB
    :type file_transfer_block_size: int
    """

    _attribute_map = {
        'physical_host_log_backup_throttle_max_ref_count': {'key': 'physicalHostLogBackupThrottleMaxRefCount', 'type': 'int'},
        'mssql_dag_update_retry_attempts': {'key': 'mssqlDagUpdateRetryAttempts', 'type': 'int'},
        'file_transfer_parallelism': {'key': 'fileTransferParallelism', 'type': 'int'},
        'file_transfer_block_size': {'key': 'fileTransferBlockSize', 'type': 'int'},
    }

    def __init__(self, physical_host_log_backup_throttle_max_ref_count=None, mssql_dag_update_retry_attempts=None, file_transfer_parallelism=None, file_transfer_block_size=None):
        self.physical_host_log_backup_throttle_max_ref_count = physical_host_log_backup_throttle_max_ref_count
        self.mssql_dag_update_retry_attempts = mssql_dag_update_retry_attempts
        self.file_transfer_parallelism = file_transfer_parallelism
        self.file_transfer_block_size = file_transfer_block_size
