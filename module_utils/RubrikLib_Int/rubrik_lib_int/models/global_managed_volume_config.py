# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from msrest.serialization import Model


class GlobalManagedVolumeConfig(Model):
    """GlobalManagedVolumeConfig.

    :param managed_volume_read_only_export_options: Export options for managed
     volume in read-only mode.
    :type managed_volume_read_only_export_options: str
    :param managed_volume_read_write_export_options: Export options for
     managed volume in read-write mode.
    :type managed_volume_read_write_export_options: str
    :param managed_volume_cleanup_write_lock_wait_ms: Maximum time waiting for
     a the managed volume cleanup read write lock in write mode.
    :type managed_volume_cleanup_write_lock_wait_ms: int
    :param managed_volume_cleanup_frequency_in_minutes: Number of minutes
     between managed volume cleanup jobs
    :type managed_volume_cleanup_frequency_in_minutes: int
    :param managed_volume_cleanup_job_in_memory_sem_shares: Maximum number of
     concurrent managed volume cleanup jobs per node
    :type managed_volume_cleanup_job_in_memory_sem_shares: int
    :param managed_volume_cleanup_write_lock_sleep_ms: Sleep time between
     checks for the managed volume cleanup read write lock in write mode.
    :type managed_volume_cleanup_write_lock_sleep_ms: int
    :param managed_volume_cleanup_discover_timeout_in_ms: Maximum time to wait
     for the managed volume cleanup discovery to scan all devices in a single
     node.
    :type managed_volume_cleanup_discover_timeout_in_ms: int
    :param managed_volume_snapshot_job_retries: Number of retries for the
     managed volume snapshot job
    :type managed_volume_snapshot_job_retries: int
    :param managed_volume_snapshot_frequency_in_minutes: Number of minutes
     between managed volume snapshot jobs
    :type managed_volume_snapshot_frequency_in_minutes: int
    :param managed_volume_snapshot_job_in_memory_sem_shares: Maximum number of
     concurrent managed volume snapshot jobs per node
    :type managed_volume_snapshot_job_in_memory_sem_shares: int
    :param managed_volume_export_job_in_memory_sem_shares: Maximum number of
     concurrent managed volume export jobs per node
    :type managed_volume_export_job_in_memory_sem_shares: int
    :param managed_volume_unexport_job_in_memory_sem_shares: Maximum number of
     concurrent managed volume unexport jobs per node
    :type managed_volume_unexport_job_in_memory_sem_shares: int
    :param managed_volume_rebase_job_in_memory_sem_shares: Maximum number of
     concurrent managed volume rebase jobs per node
    :type managed_volume_rebase_job_in_memory_sem_shares: int
    :param managed_volume_concurrent_patch_conversions_per_node: Maximum
     number of concurrent managed volume patch file conversions per node
    :type managed_volume_concurrent_patch_conversions_per_node: int
    :param managed_volume_patch_file_compression_type: Compression type for
     managed volume patch files
    :type managed_volume_patch_file_compression_type: str
    :param managed_volume_patch_creation_status_check_period_ms: Period
     between patch file creation checks for managed volumes.
    :type managed_volume_patch_creation_status_check_period_ms: int
    :param managed_volume_max_disk_size_mb: Maximum size for a managed volume
     disk
    :type managed_volume_max_disk_size_mb: int
    :param managed_volume_min_disk_size_mb: Minimum size for a managed volume
     disk.
    :type managed_volume_min_disk_size_mb: int
    :param managed_volume_optimal_num_disks: Optimal number of disks per
     snapshot
    :type managed_volume_optimal_num_disks: int
    :param managed_volume_max_channels: Maximum number of channels per managed
     volume
    :type managed_volume_max_channels: int
    :param managed_volume_sdfs_mount_path: Directory where managed volumes are
     mounted in Sdfs
    :type managed_volume_sdfs_mount_path: str
    :param managed_volume_mount_path: Directory where managed volumes are
     mounted for export
    :type managed_volume_mount_path: str
    :param managed_volume_snapshot_acquire_timeout_in_seconds: Maximum wait
     time when acquiring the semaphore while taking snapshots
    :type managed_volume_snapshot_acquire_timeout_in_seconds: int
    :param managed_volume_maintain_job_in_memory_sem_shares: Maximum number of
     concurrent managed volume maintain jobs per node
    :type managed_volume_maintain_job_in_memory_sem_shares: int
    :param managed_volume_maintain_job_interval_in_minutes: Interval for
     managed volume maintainer jobs in minutes
    :type managed_volume_maintain_job_interval_in_minutes: int
    :param managed_volume_reset_job_in_memory_sem_shares: Maximum number of
     concurrent managed volume reset jobs per node
    :type managed_volume_reset_job_in_memory_sem_shares: int
    :param managed_volume_maintain_job_retries: Number of retries for the
     managed volume maintain job
    :type managed_volume_maintain_job_retries: int
    :param managed_volume_export_job_retries: Number of retries for the
     managed volume export job
    :type managed_volume_export_job_retries: int
    :param managed_volume_unexport_job_retries: Number of retries for the
     managed volume unexport job
    :type managed_volume_unexport_job_retries: int
    :param managed_volume_reset_job_retries: Number of retries for the managed
     volume reset job
    :type managed_volume_reset_job_retries: int
    :param managed_volume_state_persist_retries: Number of retries when trying
     to transition managed volume state
    :type managed_volume_state_persist_retries: int
    :param managed_volume_report_job_in_memory_sem_shares: Maximum number of
     concurrent managed volume report jobs per node
    :type managed_volume_report_job_in_memory_sem_shares: int
    :param managed_volume_report_job_retries: Number of retries for the
     managed volume report job
    :type managed_volume_report_job_retries: int
    :param managed_volume_report_job_interval_in_minutes: Number of minutes
     between refreshes of managed volume stats
    :type managed_volume_report_job_interval_in_minutes: int
    :param managed_volume_max_channels_per_node: Maximum number of channels
     per node for all managed volumes of the cluster.
    :type managed_volume_max_channels_per_node: int
    :param managed_volume_max_channels_per_managed_volume: Maximum number of
     channels per managed volume.
    :type managed_volume_max_channels_per_managed_volume: int
    :param managed_volume_max_size_per_channel_in_gb: Maximum size per managed
     volume channel in GBs
    :type managed_volume_max_size_per_channel_in_gb: int
    :param managed_volume_enable_patch_cache: Whether PatchCache should be
     enabled for managed volumes
    :type managed_volume_enable_patch_cache: bool
    :param managed_volume_ingest_use_reed_solomon: Whether to use Reed-Solomon
     or Mirrored (2-way) \\ for Managed Volume Ingest
    :type managed_volume_ingest_use_reed_solomon: bool
    :param managed_volume_ingest_user_facing_io_priority: Whether to set MJF
     IO priority to USER_FACING for \\ ManagedVolume Ingest
    :type managed_volume_ingest_user_facing_io_priority: bool
    :param use_floating_ip_for_managed_volume: Whether to use nodes with
     floating IP to distribute managed volume channels. if set to false, all
     nodes in the cluster will be used to distribute the channels. To correctly
     use floating IPs for managed volume, user has to configure as many
     floating IP as nodes in cluster and they should be configured on bond0
     (10G) interfaces. However there are units in field which have only one
     floating IP per cluster (for replication and GUI failover purposes) and
     this single floating IP is configured on the management interface (1G) If
     only a single floating IP is configured, all channels will be mapped to
     the single node that currently owns this floating IP severly hobbling
     parallel ingest using RMAN channels.
    :type use_floating_ip_for_managed_volume: bool
    :param sdfs_service_socket_timeout_in_ms: Timeout while connecting to SDFS
     service
    :type sdfs_service_socket_timeout_in_ms: int
    :param managed_volume_name_length_max: Maximum length of managed volume
     name
    :type managed_volume_name_length_max: int
    """

    _attribute_map = {
        'managed_volume_read_only_export_options': {'key': 'managedVolumeReadOnlyExportOptions', 'type': 'str'},
        'managed_volume_read_write_export_options': {'key': 'managedVolumeReadWriteExportOptions', 'type': 'str'},
        'managed_volume_cleanup_write_lock_wait_ms': {'key': 'managedVolumeCleanupWriteLockWaitMs', 'type': 'int'},
        'managed_volume_cleanup_frequency_in_minutes': {'key': 'managedVolumeCleanupFrequencyInMinutes', 'type': 'int'},
        'managed_volume_cleanup_job_in_memory_sem_shares': {'key': 'managedVolumeCleanupJobInMemorySemShares', 'type': 'int'},
        'managed_volume_cleanup_write_lock_sleep_ms': {'key': 'managedVolumeCleanupWriteLockSleepMs', 'type': 'int'},
        'managed_volume_cleanup_discover_timeout_in_ms': {'key': 'managedVolumeCleanupDiscoverTimeoutInMs', 'type': 'int'},
        'managed_volume_snapshot_job_retries': {'key': 'managedVolumeSnapshotJobRetries', 'type': 'int'},
        'managed_volume_snapshot_frequency_in_minutes': {'key': 'managedVolumeSnapshotFrequencyInMinutes', 'type': 'int'},
        'managed_volume_snapshot_job_in_memory_sem_shares': {'key': 'managedVolumeSnapshotJobInMemorySemShares', 'type': 'int'},
        'managed_volume_export_job_in_memory_sem_shares': {'key': 'managedVolumeExportJobInMemorySemShares', 'type': 'int'},
        'managed_volume_unexport_job_in_memory_sem_shares': {'key': 'managedVolumeUnexportJobInMemorySemShares', 'type': 'int'},
        'managed_volume_rebase_job_in_memory_sem_shares': {'key': 'managedVolumeRebaseJobInMemorySemShares', 'type': 'int'},
        'managed_volume_concurrent_patch_conversions_per_node': {'key': 'managedVolumeConcurrentPatchConversionsPerNode', 'type': 'int'},
        'managed_volume_patch_file_compression_type': {'key': 'managedVolumePatchFileCompressionType', 'type': 'str'},
        'managed_volume_patch_creation_status_check_period_ms': {'key': 'managedVolumePatchCreationStatusCheckPeriodMs', 'type': 'int'},
        'managed_volume_max_disk_size_mb': {'key': 'managedVolumeMaxDiskSizeMb', 'type': 'int'},
        'managed_volume_min_disk_size_mb': {'key': 'managedVolumeMinDiskSizeMb', 'type': 'int'},
        'managed_volume_optimal_num_disks': {'key': 'managedVolumeOptimalNumDisks', 'type': 'int'},
        'managed_volume_max_channels': {'key': 'managedVolumeMaxChannels', 'type': 'int'},
        'managed_volume_sdfs_mount_path': {'key': 'managedVolumeSdfsMountPath', 'type': 'str'},
        'managed_volume_mount_path': {'key': 'managedVolumeMountPath', 'type': 'str'},
        'managed_volume_snapshot_acquire_timeout_in_seconds': {'key': 'managedVolumeSnapshotAcquireTimeoutInSeconds', 'type': 'int'},
        'managed_volume_maintain_job_in_memory_sem_shares': {'key': 'managedVolumeMaintainJobInMemorySemShares', 'type': 'int'},
        'managed_volume_maintain_job_interval_in_minutes': {'key': 'managedVolumeMaintainJobIntervalInMinutes', 'type': 'int'},
        'managed_volume_reset_job_in_memory_sem_shares': {'key': 'managedVolumeResetJobInMemorySemShares', 'type': 'int'},
        'managed_volume_maintain_job_retries': {'key': 'managedVolumeMaintainJobRetries', 'type': 'int'},
        'managed_volume_export_job_retries': {'key': 'managedVolumeExportJobRetries', 'type': 'int'},
        'managed_volume_unexport_job_retries': {'key': 'managedVolumeUnexportJobRetries', 'type': 'int'},
        'managed_volume_reset_job_retries': {'key': 'managedVolumeResetJobRetries', 'type': 'int'},
        'managed_volume_state_persist_retries': {'key': 'managedVolumeStatePersistRetries', 'type': 'int'},
        'managed_volume_report_job_in_memory_sem_shares': {'key': 'managedVolumeReportJobInMemorySemShares', 'type': 'int'},
        'managed_volume_report_job_retries': {'key': 'managedVolumeReportJobRetries', 'type': 'int'},
        'managed_volume_report_job_interval_in_minutes': {'key': 'managedVolumeReportJobIntervalInMinutes', 'type': 'int'},
        'managed_volume_max_channels_per_node': {'key': 'managedVolumeMaxChannelsPerNode', 'type': 'int'},
        'managed_volume_max_channels_per_managed_volume': {'key': 'managedVolumeMaxChannelsPerManagedVolume', 'type': 'int'},
        'managed_volume_max_size_per_channel_in_gb': {'key': 'managedVolumeMaxSizePerChannelInGb', 'type': 'int'},
        'managed_volume_enable_patch_cache': {'key': 'managedVolumeEnablePatchCache', 'type': 'bool'},
        'managed_volume_ingest_use_reed_solomon': {'key': 'managedVolumeIngestUseReedSolomon', 'type': 'bool'},
        'managed_volume_ingest_user_facing_io_priority': {'key': 'managedVolumeIngestUserFacingIOPriority', 'type': 'bool'},
        'use_floating_ip_for_managed_volume': {'key': 'useFloatingIpForManagedVolume', 'type': 'bool'},
        'sdfs_service_socket_timeout_in_ms': {'key': 'sdfsServiceSocketTimeoutInMs', 'type': 'int'},
        'managed_volume_name_length_max': {'key': 'managedVolumeNameLengthMax', 'type': 'int'},
    }

    def __init__(self, managed_volume_read_only_export_options=None, managed_volume_read_write_export_options=None, managed_volume_cleanup_write_lock_wait_ms=None, managed_volume_cleanup_frequency_in_minutes=None, managed_volume_cleanup_job_in_memory_sem_shares=None, managed_volume_cleanup_write_lock_sleep_ms=None, managed_volume_cleanup_discover_timeout_in_ms=None, managed_volume_snapshot_job_retries=None, managed_volume_snapshot_frequency_in_minutes=None, managed_volume_snapshot_job_in_memory_sem_shares=None, managed_volume_export_job_in_memory_sem_shares=None, managed_volume_unexport_job_in_memory_sem_shares=None, managed_volume_rebase_job_in_memory_sem_shares=None, managed_volume_concurrent_patch_conversions_per_node=None, managed_volume_patch_file_compression_type=None, managed_volume_patch_creation_status_check_period_ms=None, managed_volume_max_disk_size_mb=None, managed_volume_min_disk_size_mb=None, managed_volume_optimal_num_disks=None, managed_volume_max_channels=None, managed_volume_sdfs_mount_path=None, managed_volume_mount_path=None, managed_volume_snapshot_acquire_timeout_in_seconds=None, managed_volume_maintain_job_in_memory_sem_shares=None, managed_volume_maintain_job_interval_in_minutes=None, managed_volume_reset_job_in_memory_sem_shares=None, managed_volume_maintain_job_retries=None, managed_volume_export_job_retries=None, managed_volume_unexport_job_retries=None, managed_volume_reset_job_retries=None, managed_volume_state_persist_retries=None, managed_volume_report_job_in_memory_sem_shares=None, managed_volume_report_job_retries=None, managed_volume_report_job_interval_in_minutes=None, managed_volume_max_channels_per_node=None, managed_volume_max_channels_per_managed_volume=None, managed_volume_max_size_per_channel_in_gb=None, managed_volume_enable_patch_cache=None, managed_volume_ingest_use_reed_solomon=None, managed_volume_ingest_user_facing_io_priority=None, use_floating_ip_for_managed_volume=None, sdfs_service_socket_timeout_in_ms=None, managed_volume_name_length_max=None):
        self.managed_volume_read_only_export_options = managed_volume_read_only_export_options
        self.managed_volume_read_write_export_options = managed_volume_read_write_export_options
        self.managed_volume_cleanup_write_lock_wait_ms = managed_volume_cleanup_write_lock_wait_ms
        self.managed_volume_cleanup_frequency_in_minutes = managed_volume_cleanup_frequency_in_minutes
        self.managed_volume_cleanup_job_in_memory_sem_shares = managed_volume_cleanup_job_in_memory_sem_shares
        self.managed_volume_cleanup_write_lock_sleep_ms = managed_volume_cleanup_write_lock_sleep_ms
        self.managed_volume_cleanup_discover_timeout_in_ms = managed_volume_cleanup_discover_timeout_in_ms
        self.managed_volume_snapshot_job_retries = managed_volume_snapshot_job_retries
        self.managed_volume_snapshot_frequency_in_minutes = managed_volume_snapshot_frequency_in_minutes
        self.managed_volume_snapshot_job_in_memory_sem_shares = managed_volume_snapshot_job_in_memory_sem_shares
        self.managed_volume_export_job_in_memory_sem_shares = managed_volume_export_job_in_memory_sem_shares
        self.managed_volume_unexport_job_in_memory_sem_shares = managed_volume_unexport_job_in_memory_sem_shares
        self.managed_volume_rebase_job_in_memory_sem_shares = managed_volume_rebase_job_in_memory_sem_shares
        self.managed_volume_concurrent_patch_conversions_per_node = managed_volume_concurrent_patch_conversions_per_node
        self.managed_volume_patch_file_compression_type = managed_volume_patch_file_compression_type
        self.managed_volume_patch_creation_status_check_period_ms = managed_volume_patch_creation_status_check_period_ms
        self.managed_volume_max_disk_size_mb = managed_volume_max_disk_size_mb
        self.managed_volume_min_disk_size_mb = managed_volume_min_disk_size_mb
        self.managed_volume_optimal_num_disks = managed_volume_optimal_num_disks
        self.managed_volume_max_channels = managed_volume_max_channels
        self.managed_volume_sdfs_mount_path = managed_volume_sdfs_mount_path
        self.managed_volume_mount_path = managed_volume_mount_path
        self.managed_volume_snapshot_acquire_timeout_in_seconds = managed_volume_snapshot_acquire_timeout_in_seconds
        self.managed_volume_maintain_job_in_memory_sem_shares = managed_volume_maintain_job_in_memory_sem_shares
        self.managed_volume_maintain_job_interval_in_minutes = managed_volume_maintain_job_interval_in_minutes
        self.managed_volume_reset_job_in_memory_sem_shares = managed_volume_reset_job_in_memory_sem_shares
        self.managed_volume_maintain_job_retries = managed_volume_maintain_job_retries
        self.managed_volume_export_job_retries = managed_volume_export_job_retries
        self.managed_volume_unexport_job_retries = managed_volume_unexport_job_retries
        self.managed_volume_reset_job_retries = managed_volume_reset_job_retries
        self.managed_volume_state_persist_retries = managed_volume_state_persist_retries
        self.managed_volume_report_job_in_memory_sem_shares = managed_volume_report_job_in_memory_sem_shares
        self.managed_volume_report_job_retries = managed_volume_report_job_retries
        self.managed_volume_report_job_interval_in_minutes = managed_volume_report_job_interval_in_minutes
        self.managed_volume_max_channels_per_node = managed_volume_max_channels_per_node
        self.managed_volume_max_channels_per_managed_volume = managed_volume_max_channels_per_managed_volume
        self.managed_volume_max_size_per_channel_in_gb = managed_volume_max_size_per_channel_in_gb
        self.managed_volume_enable_patch_cache = managed_volume_enable_patch_cache
        self.managed_volume_ingest_use_reed_solomon = managed_volume_ingest_use_reed_solomon
        self.managed_volume_ingest_user_facing_io_priority = managed_volume_ingest_user_facing_io_priority
        self.use_floating_ip_for_managed_volume = use_floating_ip_for_managed_volume
        self.sdfs_service_socket_timeout_in_ms = sdfs_service_socket_timeout_in_ms
        self.managed_volume_name_length_max = managed_volume_name_length_max
