# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .snappable import Snappable


class VirtualMachineSummary(Snappable):
    """VirtualMachineSummary.

    :param id:
    :type id: str
    :param name:
    :type name: str
    :param configured_sla_domain_id: ID of the configured SLA domain
    :type configured_sla_domain_id: str
    :param configured_sla_domain_name: name of the configured SLA domain
    :type configured_sla_domain_name: str
    :param primary_cluster_id:
    :type primary_cluster_id: str
    :param sla_assignment: SLA assignment type. Possible values include:
     'Derived', 'Direct', 'Unassigned'
    :type sla_assignment: str or :class:`enum <rubriklib.models.enum>`
    :param effective_sla_domain_id: ID of the effective SLA domain
    :type effective_sla_domain_id: str
    :param effective_sla_domain_name: name of the effective SLA domain
    :type effective_sla_domain_name: str
    :param effective_sla_source_object_id: ID of the object from which the
     effective SLA domain is inherited
    :type effective_sla_source_object_id: str
    :param effective_sla_source_object_name: Name of the object from which the
     effective SLA domain is inherited
    :type effective_sla_source_object_name: str
    :param moid:
    :type moid: str
    :param vcenter_id:
    :type vcenter_id: str
    :param host_name:
    :type host_name: str
    :param host_id:
    :type host_id: str
    :param cluster_name:
    :type cluster_name: str
    :param snapshot_consistency_mandate: Consistency level mandated for this
     VM or empty string for none. Possible values include: 'UNKNOWN',
     'INCONSISTENT', 'CRASH_CONSISTENT', 'FILE_SYSTEM_CONSISTENT',
     'VSS_CONSISTENT', 'APP_CONSISTENT'
    :type snapshot_consistency_mandate: str or :class:`enum
     <rubriklib.models.enum>`
    :param power_status: The power status of VM(ON,OFF,SLEEP etc.)
    :type power_status: str
    :param protection_date:
    :type protection_date: datetime
    :param ip_address:
    :type ip_address: str
    :param tools_installed:
    :type tools_installed: bool
    :param is_replication_enabled:
    :type is_replication_enabled: bool
    :param folder_path: Brief info of all the objects in the folder path to
     this VM
    :type folder_path: list of :class:`VmPathPoint
     <rubriklib.models.VmPathPoint>`
    :param infra_path: Brief info of all the objects in the infrastructure
     path to this VM
    :type infra_path: list of :class:`VmPathPoint
     <rubriklib.models.VmPathPoint>`
    :param vmware_tools_installed:
    :type vmware_tools_installed: bool
    :param is_relic:
    :type is_relic: bool
    :param guest_credential_authorization_status: Status of authentication
     with a specific virtual machine using guest credentials. Possible values
     are: SUCCESSFUL, PENDING, or FAILED.
    :type guest_credential_authorization_status: str
    :param cloud_instantiation_spec: Cloud instantiation specification for the
     selected virtual machine.
    :type cloud_instantiation_spec: :class:`CloudInstantiationSpec
     <rubriklib.models.CloudInstantiationSpec>`
    """

    _validation = {
        'id': {'required': True},
        'name': {'required': True},
        'configured_sla_domain_id': {'required': True},
        'configured_sla_domain_name': {'required': True},
        'primary_cluster_id': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'configured_sla_domain_id': {'key': 'configuredSlaDomainId', 'type': 'str'},
        'configured_sla_domain_name': {'key': 'configuredSlaDomainName', 'type': 'str'},
        'primary_cluster_id': {'key': 'primaryClusterId', 'type': 'str'},
        'sla_assignment': {'key': 'slaAssignment', 'type': 'str'},
        'effective_sla_domain_id': {'key': 'effectiveSlaDomainId', 'type': 'str'},
        'effective_sla_domain_name': {'key': 'effectiveSlaDomainName', 'type': 'str'},
        'effective_sla_source_object_id': {'key': 'effectiveSlaSourceObjectId', 'type': 'str'},
        'effective_sla_source_object_name': {'key': 'effectiveSlaSourceObjectName', 'type': 'str'},
        'moid': {'key': 'moid', 'type': 'str'},
        'vcenter_id': {'key': 'vcenterId', 'type': 'str'},
        'host_name': {'key': 'hostName', 'type': 'str'},
        'host_id': {'key': 'hostId', 'type': 'str'},
        'cluster_name': {'key': 'clusterName', 'type': 'str'},
        'snapshot_consistency_mandate': {'key': 'snapshotConsistencyMandate', 'type': 'str'},
        'power_status': {'key': 'powerStatus', 'type': 'str'},
        'protection_date': {'key': 'protectionDate', 'type': 'iso-8601'},
        'ip_address': {'key': 'ipAddress', 'type': 'str'},
        'tools_installed': {'key': 'toolsInstalled', 'type': 'bool'},
        'is_replication_enabled': {'key': 'isReplicationEnabled', 'type': 'bool'},
        'folder_path': {'key': 'folderPath', 'type': '[VmPathPoint]'},
        'infra_path': {'key': 'infraPath', 'type': '[VmPathPoint]'},
        'vmware_tools_installed': {'key': 'vmwareToolsInstalled', 'type': 'bool'},
        'is_relic': {'key': 'isRelic', 'type': 'bool'},
        'guest_credential_authorization_status': {'key': 'guestCredentialAuthorizationStatus', 'type': 'str'},
        'cloud_instantiation_spec': {'key': 'cloudInstantiationSpec', 'type': 'CloudInstantiationSpec'},
    }

    def __init__(self, id, name, configured_sla_domain_id, configured_sla_domain_name, primary_cluster_id, sla_assignment=None, effective_sla_domain_id=None, effective_sla_domain_name=None, effective_sla_source_object_id=None, effective_sla_source_object_name=None, moid=None, vcenter_id=None, host_name=None, host_id=None, cluster_name=None, snapshot_consistency_mandate=None, power_status=None, protection_date=None, ip_address=None, tools_installed=None, is_replication_enabled=None, folder_path=None, infra_path=None, vmware_tools_installed=None, is_relic=None, guest_credential_authorization_status=None, cloud_instantiation_spec=None):
        super(VirtualMachineSummary, self).__init__(id=id, name=name, configured_sla_domain_id=configured_sla_domain_id, configured_sla_domain_name=configured_sla_domain_name, primary_cluster_id=primary_cluster_id, sla_assignment=sla_assignment, effective_sla_domain_id=effective_sla_domain_id, effective_sla_domain_name=effective_sla_domain_name, effective_sla_source_object_id=effective_sla_source_object_id, effective_sla_source_object_name=effective_sla_source_object_name)
        self.moid = moid
        self.vcenter_id = vcenter_id
        self.host_name = host_name
        self.host_id = host_id
        self.cluster_name = cluster_name
        self.snapshot_consistency_mandate = snapshot_consistency_mandate
        self.power_status = power_status
        self.protection_date = protection_date
        self.ip_address = ip_address
        self.tools_installed = tools_installed
        self.is_replication_enabled = is_replication_enabled
        self.folder_path = folder_path
        self.infra_path = infra_path
        self.vmware_tools_installed = vmware_tools_installed
        self.is_relic = is_relic
        self.guest_credential_authorization_status = guest_credential_authorization_status
        self.cloud_instantiation_spec = cloud_instantiation_spec
