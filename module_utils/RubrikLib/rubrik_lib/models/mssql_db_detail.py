# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator.
# Changes may cause incorrect behavior and will be lost if the code is
# regenerated.
# --------------------------------------------------------------------------

from .mssql_db_summary import MssqlDbSummary


class MssqlDbDetail(MssqlDbSummary):
    """MssqlDbDetail.

    :param id:
    :type id: str
    :param name:
    :type name: str
    :param configured_sla_domain_id: ID of the configured SLA domain
    :type configured_sla_domain_id: str
    :param configured_sla_domain_name: name of the configured SLA domain
    :type configured_sla_domain_name: str
    :param primary_cluster_id:
    :type primary_cluster_id: str
    :param sla_assignment: SLA assignment type. Possible values include:
     'Derived', 'Direct', 'Unassigned'
    :type sla_assignment: str or :class:`enum <rubriklib.models.enum>`
    :param effective_sla_domain_id: ID of the effective SLA domain
    :type effective_sla_domain_id: str
    :param effective_sla_domain_name: name of the effective SLA domain
    :type effective_sla_domain_name: str
    :param effective_sla_source_object_id: ID of the object from which the
     effective SLA domain is inherited
    :type effective_sla_source_object_id: str
    :param effective_sla_source_object_name: Name of the object from which the
     effective SLA domain is inherited
    :type effective_sla_source_object_name: str
    :param root_properties:
    :type root_properties: :class:`MssqlRootProperties
     <rubriklib.models.MssqlRootProperties>`
    :param instance_id:
    :type instance_id: str
    :param instance_name:
    :type instance_name: str
    :param is_relic:
    :type is_relic: bool
    :param copy_only: If true, take copy-only backups of the database.
     Otherwise, take full or differential backups of the database.
    :type copy_only: bool
    :param log_backup_frequency_in_seconds:
    :type log_backup_frequency_in_seconds: int
    :param log_backup_retention_hours: Hours to keep a log backup. A value of
     -1 indicates that a log will only expire when the preceding snapshots have
     expired.
    :type log_backup_retention_hours: int
    :param is_live_mount: If true, the database is a Live Mount.
    :type is_live_mount: bool
    :param recovery_model: Possible values include: 'SIMPLE', 'FULL',
     'BULK_LOGGED'
    :type recovery_model: str or :class:`enum <rubriklib.models.enum>`
    :param state:
    :type state: str
    :param has_permissions:
    :type has_permissions: bool
    :param is_in_availability_group:
    :type is_in_availability_group: bool
    :param snapshot_count:
    :type snapshot_count: int
    :param is_local:
    :type is_local: bool
    :param is_standby:
    :type is_standby: bool
    :param latest_recovery_point:
    :type latest_recovery_point: date
    :param oldest_recovery_point:
    :type oldest_recovery_point: date
    :param protection_date:
    :type protection_date: date
    :param recovery_fork_guid:
    :type recovery_fork_guid: str
    :param max_data_streams:
    :type max_data_streams: int
    :param local_storage:
    :type local_storage: long
    :param archive_storage:
    :type archive_storage: long
    """

    _validation = {
        'id': {'required': True},
        'name': {'required': True},
        'configured_sla_domain_id': {'required': True},
        'configured_sla_domain_name': {'required': True},
        'primary_cluster_id': {'required': True},
    }

    _attribute_map = {
        'id': {'key': 'id', 'type': 'str'},
        'name': {'key': 'name', 'type': 'str'},
        'configured_sla_domain_id': {'key': 'configuredSlaDomainId', 'type': 'str'},
        'configured_sla_domain_name': {'key': 'configuredSlaDomainName', 'type': 'str'},
        'primary_cluster_id': {'key': 'primaryClusterId', 'type': 'str'},
        'sla_assignment': {'key': 'slaAssignment', 'type': 'str'},
        'effective_sla_domain_id': {'key': 'effectiveSlaDomainId', 'type': 'str'},
        'effective_sla_domain_name': {'key': 'effectiveSlaDomainName', 'type': 'str'},
        'effective_sla_source_object_id': {'key': 'effectiveSlaSourceObjectId', 'type': 'str'},
        'effective_sla_source_object_name': {'key': 'effectiveSlaSourceObjectName', 'type': 'str'},
        'root_properties': {'key': 'rootProperties', 'type': 'MssqlRootProperties'},
        'instance_id': {'key': 'instanceId', 'type': 'str'},
        'instance_name': {'key': 'instanceName', 'type': 'str'},
        'is_relic': {'key': 'isRelic', 'type': 'bool'},
        'copy_only': {'key': 'copyOnly', 'type': 'bool'},
        'log_backup_frequency_in_seconds': {'key': 'logBackupFrequencyInSeconds', 'type': 'int'},
        'log_backup_retention_hours': {'key': 'logBackupRetentionHours', 'type': 'int'},
        'is_live_mount': {'key': 'isLiveMount', 'type': 'bool'},
        'recovery_model': {'key': 'recoveryModel', 'type': 'str'},
        'state': {'key': 'state', 'type': 'str'},
        'has_permissions': {'key': 'hasPermissions', 'type': 'bool'},
        'is_in_availability_group': {'key': 'isInAvailabilityGroup', 'type': 'bool'},
        'snapshot_count': {'key': 'snapshotCount', 'type': 'int'},
        'is_local': {'key': 'isLocal', 'type': 'bool'},
        'is_standby': {'key': 'isStandby', 'type': 'bool'},
        'latest_recovery_point': {'key': 'latestRecoveryPoint', 'type': 'date'},
        'oldest_recovery_point': {'key': 'oldestRecoveryPoint', 'type': 'date'},
        'protection_date': {'key': 'protectionDate', 'type': 'date'},
        'recovery_fork_guid': {'key': 'recoveryForkGuid', 'type': 'str'},
        'max_data_streams': {'key': 'maxDataStreams', 'type': 'int'},
        'local_storage': {'key': 'localStorage', 'type': 'long'},
        'archive_storage': {'key': 'archiveStorage', 'type': 'long'},
    }

    def __init__(self, id, name, configured_sla_domain_id, configured_sla_domain_name, primary_cluster_id, sla_assignment=None, effective_sla_domain_id=None, effective_sla_domain_name=None, effective_sla_source_object_id=None, effective_sla_source_object_name=None, root_properties=None, instance_id=None, instance_name=None, is_relic=None, copy_only=None, log_backup_frequency_in_seconds=None, log_backup_retention_hours=None, is_live_mount=None, recovery_model=None, state=None, has_permissions=None, is_in_availability_group=None, snapshot_count=None, is_local=None, is_standby=None, latest_recovery_point=None, oldest_recovery_point=None, protection_date=None, recovery_fork_guid=None, max_data_streams=None, local_storage=None, archive_storage=None):
        super(MssqlDbDetail, self).__init__(id=id, name=name, configured_sla_domain_id=configured_sla_domain_id, configured_sla_domain_name=configured_sla_domain_name, primary_cluster_id=primary_cluster_id, sla_assignment=sla_assignment, effective_sla_domain_id=effective_sla_domain_id, effective_sla_domain_name=effective_sla_domain_name, effective_sla_source_object_id=effective_sla_source_object_id, effective_sla_source_object_name=effective_sla_source_object_name, root_properties=root_properties, instance_id=instance_id, instance_name=instance_name, is_relic=is_relic, copy_only=copy_only, log_backup_frequency_in_seconds=log_backup_frequency_in_seconds, log_backup_retention_hours=log_backup_retention_hours, is_live_mount=is_live_mount, recovery_model=recovery_model, state=state, has_permissions=has_permissions, is_in_availability_group=is_in_availability_group)
        self.snapshot_count = snapshot_count
        self.is_local = is_local
        self.is_standby = is_standby
        self.latest_recovery_point = latest_recovery_point
        self.oldest_recovery_point = oldest_recovery_point
        self.protection_date = protection_date
        self.recovery_fork_guid = recovery_fork_guid
        self.max_data_streams = max_data_streams
        self.local_storage = local_storage
        self.archive_storage = archive_storage
